{"meta":{"ns":"Hitaki","version":"0.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"class","name":"SndDice","ctype":"HitakiSndDice","summary":"A GObject-derived object for sound unit of TCAT DICE ..."},{"type":"class","name":"SndDigi00x","ctype":"HitakiSndDigi00x","summary":"A GObject-derived object for sound unit of Digidesign Digi00x ..."},{"type":"class","name":"SndEfw","ctype":"HitakiSndEfw","summary":"A GObject-derived object for sound unit of Echo Audio ..."},{"type":"class","name":"SndMotu","ctype":"HitakiSndMotu","summary":"A GObject-derived object for sound unit of MOTU FireWire ..."},{"type":"class","name":"SndTascam","ctype":"HitakiSndTascam","summary":"A GObject-derived object for sound unit of TASCAM FireWire ..."},{"type":"class","name":"SndUnit","ctype":"HitakiSndUnit","summary":"A GObject-derived object for sound unit without specific function. ..."},{"type":"content","name":"Overview","href":"overview.html","summary":" The library produces some objects as an abstraction ..."},{"type":"ctor","name":"new","type_name":"SndDice","ident":"hitaki_snd_dice_new","summary":"Instantiate [class@SndDice] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndDigi00x","ident":"hitaki_snd_digi00x_new","summary":"Instantiate [class@SndDigi00x] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndEfw","ident":"hitaki_snd_efw_new","summary":"Instantiate [class@SndEfw] object and return it."},{"type":"ctor","name":"new","type_name":"SndMotu","ident":"hitaki_snd_motu_new","summary":"Instantiate [class@SndMotu] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndTascam","ident":"hitaki_snd_tascam_new","summary":"Instantiate [class@SndTascam] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndUnit","ident":"hitaki_snd_unit_new","summary":"Instantiate [class@SndUnit] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_new","summary":"Instantiate [struct@SndMotuRegisterDspParameter] object and return the instance."},{"type":"domain","name":"AlsaFirewireError","ctype":"HitakiAlsaFirewireError","summary":"The enumerations to report result of operation in [iface@AlsaFirewire]."},{"type":"domain","name":"EfwProtocolError","ctype":"HitakiEfwProtocolError","summary":"The enumerations to report status of response in Fireworks protocol."},{"type":"enum","name":"AlsaFirewireType","ctype":"HitakiAlsaFirewireType","summary":"The enumerations for type of sound unit defined by ..."},{"type":"interface","name":"AlsaFirewire","ctype":"HitakiAlsaFirewire","summary":"An interface to operate ALSA HwDep character device for ..."},{"type":"interface","name":"EfwProtocol","ctype":"HitakiEfwProtocol","summary":"An interface for Fireworks Protocol. Echo Audio Fireworks devices ..."},{"type":"interface","name":"MotuCommandDsp","ctype":"HitakiMotuCommandDsp","summary":"An interface for protocol of command DSP model in ..."},{"type":"interface","name":"MotuRegisterDsp","ctype":"HitakiMotuRegisterDsp","summary":"An interface for protocol of register DSP models in ..."},{"type":"interface","name":"QuadletNotification","ctype":"HitakiQuadletNotification","summary":"An interface to operate notification with quadlet message. Some ..."},{"type":"interface","name":"TascamProtocol","ctype":"HitakiTascamProtocol","summary":"An interface for protocol of TASCAM FireWire series. TASCAM ..."},{"type":"method","name":"create_source","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_create_source","summary":"Allocate [struct@GLib.Source]  to handle events from ALSA HwDep ..."},{"type":"method","name":"get_headphone_output_paired_assignment","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_assignment","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_headphone_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_input_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_input_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_input_gain_and_invert","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_input_gain_and_invert","summary":"Get the array with elements for input gain and ..."},{"type":"method","name":"get_line_input_boost_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_line_input_boost_flag","summary":"Get the data for flags of line input boost. ..."},{"type":"method","name":"get_line_input_nominal_level_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_line_input_nominal_level_flag","summary":"Get the data for flags of line input nominal ..."},{"type":"method","name":"get_main_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_main_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_output_paired_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_gain","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_gain","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_paired_balance","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_balance","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_paired_width","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_width","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_pan","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_pan","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"lock","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_lock","summary":"Lock kernel driver bound to the associated ALSA HwDep ..."},{"type":"method","name":"open","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_open","summary":"Open the special file for ALSA HwDep character device."},{"type":"method","name":"read_byte_meter","type_name":"MotuRegisterDsp","ident":"hitaki_motu_register_dsp_read_byte_meter","summary":"Read cached data of meter information for register DSP models."},{"type":"method","name":"read_float_meter","type_name":"MotuCommandDsp","ident":"hitaki_motu_command_dsp_read_float_meter","summary":"Read cached data of meter information for command DSP models."},{"type":"method","name":"read_parameter","type_name":"MotuRegisterDsp","ident":"hitaki_motu_register_dsp_read_parameter","summary":"Read cached parameter for register DSP models."},{"type":"method","name":"read_state","type_name":"TascamProtocol","ident":"hitaki_tascam_protocol_read_state","summary":"Read the latest image of device state."},{"type":"method","name":"receive_response","type_name":"EfwProtocol","ident":"hitaki_efw_protocol_receive_response","summary":"Parse the given buffer for response frame of Fireworks ..."},{"type":"method","name":"transaction","type_name":"EfwProtocol","ident":"hitaki_efw_protocol_transaction","summary":"Transfer asynchronous transaction for request frame of Echo Efw ..."},{"type":"method","name":"transmit_request","type_name":"EfwProtocol","ident":"hitaki_efw_protocol_transmit_request","summary":"Transfer asynchronous transaction for request frame of Fireworks transaction. ..."},{"type":"method","name":"unlock","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_unlock","summary":"Unlock kernel driver bound to the associated ALSA HwDep ..."},{"type":"property","name":"card-id","type_name":"AlsaFirewire","summary":"The numeric identifier for sound card."},{"type":"property","name":"guid","type_name":"AlsaFirewire","summary":"Global unique identifier for the node in IEEE 1394 bus."},{"type":"property","name":"is-disconnected","type_name":"AlsaFirewire","summary":"Whether the sound card is unavailable. It becomes FALSE ..."},{"type":"property","name":"is-locked","type_name":"AlsaFirewire","summary":"Whether the associated unit is locked or not to ..."},{"type":"property","name":"node-device","type_name":"AlsaFirewire","summary":"The name of node device in Linux FireWire subsystem ..."},{"type":"property","name":"unit-type","type_name":"AlsaFirewire","summary":"The type of sound unit."},{"type":"record","name":"SndMotuRegisterDspParameter","ctype":"HitakiSndMotuRegisterDspParameter","summary":"A boxed object for parameters in MOTU register DSP ..."},{"type":"signal","name":"changed","type_name":"MotuRegisterDsp","summary":"Emitted when MOTU register DSP models transfer events by ..."},{"type":"signal","name":"changed","type_name":"TascamProtocol","summary":"Emitted when the part of image differed for the ..."},{"type":"signal","name":"notified","type_name":"QuadletNotification","summary":"Emitted when the target unit transfers notification."},{"type":"signal","name":"responded","type_name":"EfwProtocol","summary":"Emitted when the unit transfers asynchronous packet as response ..."},{"type":"type_func","name":"quark","type_name":"AlsaFirewireError","ident":"hitaki_alsa_firewire_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in Hitaki.AlsaFirewireError enumerations."},{"type":"type_func","name":"quark","type_name":"EfwProtocolError","ident":"hitaki_efw_protocol_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in Hitaki.EfwProtocolError enumerations."},{"type":"type_func","name":"to_label","type_name":"AlsaFirewireError","ident":"hitaki_alsa_firewire_error_to_label","summary":"Retrieve the string label of error from code."},{"type":"type_func","name":"to_label","type_name":"EfwProtocolError","ident":"hitaki_efw_protocol_error_to_label","summary":"Retrieve the string label of error."},{"type":"vfunc","name":"changed","type_name":"MotuRegisterDsp","summary":"Class closure for the [signal@MotuRegisterDsp::changed] signal."},{"type":"vfunc","name":"changed","type_name":"TascamProtocol","summary":"Class closure for the [signal@TascamProtocol::changed] signal."},{"type":"vfunc","name":"create_source","type_name":"AlsaFirewire","summary":"Allocate [struct@GLib.Source]  to handle events from ALSA HwDep ..."},{"type":"vfunc","name":"get_seqnum","type_name":"EfwProtocol","summary":"Virtual function to retrieve the sequence number for request ..."},{"type":"vfunc","name":"lock","type_name":"AlsaFirewire","summary":"Lock kernel driver bound to the associated ALSA HwDep ..."},{"type":"vfunc","name":"notified","type_name":"QuadletNotification","summary":"Class closure for the [signal@QuadletNotification::notified] signal."},{"type":"vfunc","name":"open","type_name":"AlsaFirewire","summary":"Open the special file for ALSA HwDep character device."},{"type":"vfunc","name":"read_byte_meter","type_name":"MotuRegisterDsp","summary":"Read cached data of meter information for register DSP models."},{"type":"vfunc","name":"read_float_meter","type_name":"MotuCommandDsp","summary":"Read cached data of meter information for command DSP models."},{"type":"vfunc","name":"read_parameter","type_name":"MotuRegisterDsp","summary":"Read cached parameter for register DSP models."},{"type":"vfunc","name":"read_state","type_name":"TascamProtocol","summary":"Read the latest image of device state."},{"type":"vfunc","name":"responded","type_name":"EfwProtocol","summary":"Class closure for the [signal@EfwProtocol::responded] signal."},{"type":"vfunc","name":"transmit_request","type_name":"EfwProtocol","summary":"Virtual function to transmit the content of request frame ..."},{"type":"vfunc","name":"unlock","type_name":"AlsaFirewire","summary":"Unlock kernel driver bound to the associated ALSA HwDep ..."}],"terms":{"":[12,20,30,64,65,69,71,77],"+4":[67],"-":[64,65,69,71],"-10":[67],"0":[48],"0x00":[63,68,70,72,73,74,75],"0x01":[64,71],"0x02":[64,71],"0x04":[64],"0x08":[64],"0x0f":[69],"0x10":[69],"0x1f":[65],"0x20":[65],"0x3f":[65],"0x40":[65],"0x80":[63,68,70,72,73,74,75],"1":[39,48],"1394":[19,25,77],"4":[65],"64":[8],"[iface@alsafirewire]":[12],"[iface@efwprotocol]":[35],"`snd-dice`":[0],"`snd-firewire-digi00x`":[2],"`snd-firewire-motu`":[6],"`snd-firewire-tascam`":[8],"`snd-fireworks`":[4],"`sound/firewire/motu/motu-register-dsp-message-parser.c":[48],"abstract":[77],"accept":[34],"accord":[8],"address":[34],"after":[37],"all":[19],"alloc":[20,30],"allow":[19],"alreadi":[12],"alsa":[0,2,4,6,8,10,12,18,19,20,21,22,23,26,30,31,32,33,38,52,77],"an":[2,4,6,8,10,19,34,42,45,52,55,77],"ani":[10,12,35],"applic":[19,77],"arrai":[62,63,64,65,68,69,70,71,72,73,74,75],"asic":[0,18],"assign":[62],"associ":[12,21,23,27,31,33],"asynchron":[36,37,38,55],"attenu":[64],"audio":[4,19,34,38,65,77],"avail":[12,77],"bad":[15],"bad_channel":[15],"bad_clock":[15],"bad_command":[15],"bad_led":[15],"bad_mirror":[15],"bad_pan":[15],"bad_parameter":[15],"bad_quad_count":[15],"bad_rate":[15],"balanc":[73],"bebob":[18],"becom":[26],"below":[64,65,69,71],"between":[12,63,68,70,72,73,74,75],"bind":[77],"bit":[64,66,67,69,71],"board":[18],"boost":[66],"bound":[21,23,31,33],"box":[60],"bu":[19,25,77],"buffer":[35],"busi":[15],"byte":[46,48,50],"cach":[43,44,46,47,50,51],"call":[12,26,36,37],"can":[23,33],"cancel":[15],"card":[12,24,26],"categori":[15],"chang":[48,49,55,57,58],"channel":[15,66,67],"charact":[12,19,20,21,22,23,26,30,31,32,33],"class":[0,2,4,6,8,10,12,40,49,54,58],"clock":[15],"closur":[40,49,54,58],"code":[13,14,16],"comm_err":[15],"command":[15,36,42,43,44],"common":[10,19],"commun":[15],"compos":[37],"condit":[15],"consist":[8,48,64,66,67,69,71],"contain":[60],"content":[38,41],"correspond":[66,67],"creat":[20,30],"data":[36,43,44,46,48,50,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"dbu":[67],"dbv":[67],"decid":[48],"defin":[18],"deliv":[42,45],"depend":[48],"deriv":[0,2,4,6,8,10],"destin":[69],"detail":[48],"detect":[64],"devic":[4,12,19,20,21,22,23,26,28,30,31,32,33,34,39,41,55,56,57,59],"dice":[0,18],"did":[15],"differ":[57,65],"digi00x":[2,18],"digidesign":[2],"disconnect":[12,26],"dispatch":[77],"document":[77],"driver":[0,2,4,6,8,10,19,21,23,26,31,33,38,52,77],"dsp":[15,42,43,44,45,46,47,48,50,51,60],"dsp_timeout":[15],"due":[15],"e.g":[28],"each":[77],"echo":[4,34,36,38],"efw":[4,15,34,36,38],"either":[55],"element":[62,63,64,65,68,69,70,71,72,73,74,75],"els":[67],"emit":[38,48,53,57],"enabl":[64,69,71],"encod":[48],"enumer":[12,13,15,16,18],"error":[12,14,15,17],"event":[20,30,48,77],"expect":[35,39,77],"express":[65],"fail":[12,15],"failed":[12],"fals":[26],"famili":[2],"file":[22,32],"finish":[15],"firefac":[18],"fireface":[18],"firewir":[6,8,10,12,18,19,28,42,45,52,55,60,77],"firewire-digi00x":[2],"firewire-motu":[6],"firewire-tascam":[8],"firework":[4,15,18,34,35,37],"fireworks":[18],"flag":[64,65,66,67,69,71],"flash":[15],"flash_busy":[15],"float":[43,44],"frame":[34,35,36,37,39,41,42,45],"frequenc":[15],"from":[0,2,4,6,8,10,14,20,30,38,77],"function":[10,12,19,35,39,41,52,71],"fw1":[28],"gain":[65,70,72],"get":[39,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"given":[35],"global":[25],"gobject":[12,77],"gobject-deriv":[0,2,4,6,8,10],"group":[65],"guid":[25],"ha":[62,63,68,70,72,73,74,75],"handl":[20,30,34],"have":[52],"header":[15],"headphon":[62,63],"hitaki.alsafirewireerror":[13],"hitaki.efwprotocolerror":[16],"hitaki_alsa_firewire_create_source":[20],"hitaki_alsa_firewire_error_quark":[13],"hitaki_alsa_firewire_error_to_label":[14],"hitaki_alsa_firewire_lock":[21],"hitaki_alsa_firewire_open":[22],"hitaki_alsa_firewire_unlock":[23],"hitaki_efw_protocol_error_quark":[16],"hitaki_efw_protocol_error_to_label":[17],"hitaki_efw_protocol_receive_response":[35],"hitaki_efw_protocol_transaction":[36],"hitaki_efw_protocol_transmit_request":[37],"hitaki_motu_command_dsp_read_float_meter":[43],"hitaki_motu_register_dsp_read_byte_meter":[46],"hitaki_motu_register_dsp_read_parameter":[47],"hitaki_snd_dice_new":[1],"hitaki_snd_digi00x_new":[3],"hitaki_snd_efw_new":[5],"hitaki_snd_motu_new":[7],"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_assignment":[62],"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_volume":[63],"hitaki_snd_motu_register_dsp_parameter_get_input_flag":[64],"hitaki_snd_motu_register_dsp_parameter_get_input_gain_and_invert":[65],"hitaki_snd_motu_register_dsp_parameter_get_line_input_boost_flag":[66],"hitaki_snd_motu_register_dsp_parameter_get_line_input_nominal_level_flag":[67],"hitaki_snd_motu_register_dsp_parameter_get_main_output_paired_volume":[68],"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_flag":[69],"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_volume":[70],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_flag":[71],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_gain":[72],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_balance":[73],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_width":[74],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_pan":[75],"hitaki_snd_motu_register_dsp_parameter_new":[61],"hitaki_snd_tascam_new":[9],"hitaki_snd_unit_new":[11],"hitaki_tascam_protocol_read_state":[56],"hitakialsafirewire":[19],"hitakialsafirewireerror":[12],"hitakialsafirewiretype":[18],"hitakiefwprotocol":[34],"hitakiefwprotocolerror":[15],"hitakimotucommanddsp":[42],"hitakimoturegisterdsp":[45],"hitakiquadletnotification":[52],"hitakisnddice":[0],"hitakisnddigi00x":[2],"hitakisndefw":[4],"hitakisndmotu":[6],"hitakisndmoturegisterdspparameter":[60],"hitakisndtascam":[8],"hitakisndunit":[10],"hitakitascamprotocol":[55],"hwdep":[12,19,20,21,22,23,26,30,31,32,33],"id":[24],"identifi":[24,25,48],"ieee":[19,25,77],"imag":[8,55,56,57,59],"implement":[4,6,8,35,77],"includ":[15,19,35],"incomplet":[15],"incomplete":[15],"increment":[39],"index":[62],"indic":[69,70,71,72,73,74,75],"inform":[42,43,44,45,46,50],"input":[64,65,66,67],"insert":[64],"instanc":[1,3,7,9,11,12,61],"instanti":[1,3,5,7,9,11,61],"interfac":[19,34,42,45,52,55],"intern":[37],"interpret":[65],"introspect":[77],"invalid":[15],"invert":[65],"is_disconnected":[12],"is_locked":[12],"is_not_opened":[12],"is_opened":[12],"is_unlocked":[12],"is_used":[12],"isochron":[42,45,48,55],"it":[5,26],"it'":[35],"jack":[64],"kernel":[21,23,31,33,48],"l/r":[73],"label":[14,17],"languag":[77],"latest":[56,59],"least":[35,48],"led":[15],"level":[67],"librari":[77],"line":[66,67],"linux":[28,48,77],"listen":[34],"lock":[21,27,31],"main":[68],"make":[64],"mark":[6,42,45,60],"mask":[69],"match":[36],"mean":[48],"mechan":[77],"messag":[42,45,48,52],"meter":[42,43,44,45,46,50],"midi":[42,45],"mirror":[15],"mismatch":[12],"mixer":[69,70,71,72,73,74,75],"model":[42,43,44,45,46,47,48,50,51,60],"model-specif":[77],"modul":[18],"most":[48],"motu":[6,18,42,45,48,60],"music":[19,77],"mute":[69,71],"name":[28],"new":[1,3,5,7,9,11,61],"next":[48],"node":[25,28],"nomin":[67],"notif":[52,53],"notifi":[52,53,54],"number":[15,39],"numer":[24],"object":[0,1,2,3,4,5,6,7,8,9,10,11,19,26,34,42,45,55,60,61,77],"ok":[15],"on":[35,77],"on-board":[15],"open":[22,32],"oper":[12,15,19,52,77],"other":[12],"output":[62,63,68,69,70],"own":[28],"owner":[26],"oxfw":[18],"packet":[12,21,23,27,31,33,38,42,45,48,55],"pad":[64],"pair":[62,63,64,68,69,70,73,74],"pan":[15,75],"paramet":[15,37,45,47,51,60],"pars":[35],"part":[19,57],"pcm":[42,45],"per":[35],"phantom":[64],"phase":[65],"pleas":[77],"plug":[64],"possibl":[26],"power":[64],"pre":[65],"process":[12,38],"produc":[77],"prohibit":[12,21,31],"protocol":[4,6,8,15,34,36,42,45,55],"purpos":[52],"python":[77],"quadlet":[8,15,52],"quark":[13,16],"quickli":[26],"read":[38,43,44,46,47,50,51,56,59],"receiv":[35,37],"refer":[77],"regist":[45,46,47,48,50,51,60],"releas":[26],"remov":[26],"report":[12,15],"request":[15,34,36,37,39,41],"resourc":[77],"respond":[38,40],"respons":[15,34,35,36,37,38,39],"result":[12,35,36,37],"retriev":[14,17,39,77],"return":[1,3,5,7,9,11,13,16,61],"rme":[18],"rubi":[77],"run":[77],"sampl":[15],"see":[48],"seqnum":[39],"sequenc":[39,48],"seri":[6,8,18,42,45,55,60],"should":[26,35],"signal":[36,37,40,49,54,58],"signific":[48],"snd":[0,2,4,6,8,10,60],"sndrv_firewire_tascam_state_count":[8],"so":[21,23,31,33,77],"solo":[71],"some":[52,77],"sound":[0,2,4,6,8,10,12,18,24,26,29,77],"sourc":[15,20,30,62,71,72,73,74,75],"space":[34],"special":[22,32],"specif":[10,19,34,52],"stack":[8,10,18,19,52,77],"stand":[66,67],"start":[21,23,27,31,33],"state":[8,55,56,57,59],"statu":[15],"stream":[12,21,23,27,31,33],"string":[14,17],"subsystem":[28,77],"successfulli":[15,38],"support":[0,2,4,6,8,10,15,52,77],"system":[12,77],"target":[41,53],"tascam":[8,18,55],"tcat":[0],"thetyp":[12],"thu":[77],"timeout":[15],"transact":[15,35,36,37,38,39],"transfer":[34,36,37,38,42,45,48,53,55],"transmit":[37,39,41],"two":[48,65],"type":[18,29,48],"uapi":[8],"ultralit":[65],"unavail":[26],"unbound":[26],"unicorn":[6,42,45,60],"uniqu":[25],"unit":[0,2,4,6,8,10,12,18,19,27,28,29,38,52,53,77],"unlock":[23,33],"unsupported":[15],"us":[12,19,35,39,77],"userspac":[19,77],"valu":[15,48,62,63,68,70,72,73,74,75],"via":[19],"virtual":[39,41],"volum":[63,68,70],"wait":[36],"well":[42,45],"when":[26,34,37,38,48,53,57,66,67,77],"whether":[26,27,64,65,69,71],"which":[28],"width":[74],"within":[15],"without":[10],"wrong_class":[12],"yet":[12]}}