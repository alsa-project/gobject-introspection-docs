{"meta":{"ns":"Hitaki","version":"0.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"class","name":"SndDice","ctype":"HitakiSndDice","summary":"A GObject-derived object for sound unit of TCAT DICE ..."},{"type":"class","name":"SndDigi00x","ctype":"HitakiSndDigi00x","summary":"A GObject-derived object for sound unit of Digidesign Digi00x ..."},{"type":"class","name":"SndEfw","ctype":"HitakiSndEfw","summary":"A GObject-derived object for sound unit of Echo Audio ..."},{"type":"class","name":"SndFireface","ctype":"HitakiSndFireface","summary":"A GObject-derived object for sound unit of RME Fireface ..."},{"type":"class","name":"SndMotu","ctype":"HitakiSndMotu","summary":"A GObject-derived object for sound unit of MOTU FireWire ..."},{"type":"class","name":"SndTascam","ctype":"HitakiSndTascam","summary":"A GObject-derived object for sound unit of TASCAM FireWire ..."},{"type":"class","name":"SndUnit","ctype":"HitakiSndUnit","summary":"A GObject-derived object for sound unit without specific function. ..."},{"type":"content","name":"Overview","href":"overview.html","summary":" The library produces some objects as an abstraction ..."},{"type":"ctor","name":"new","type_name":"SndDice","ident":"hitaki_snd_dice_new","summary":"Instantiate [class@SndDice] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndDigi00x","ident":"hitaki_snd_digi00x_new","summary":"Instantiate [class@SndDigi00x] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndEfw","ident":"hitaki_snd_efw_new","summary":"Instantiate [class@SndEfw] object and return it."},{"type":"ctor","name":"new","type_name":"SndFireface","ident":"hitaki_snd_fireface_new","summary":"Instantiate [class@SndFireface] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndMotu","ident":"hitaki_snd_motu_new","summary":"Instantiate [class@SndMotu] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndTascam","ident":"hitaki_snd_tascam_new","summary":"Instantiate [class@SndTascam] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndUnit","ident":"hitaki_snd_unit_new","summary":"Instantiate [class@SndUnit] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_new","summary":"Instantiate [struct@SndMotuRegisterDspParameter] object and return the instance."},{"type":"domain","name":"AlsaFirewireError","ctype":"HitakiAlsaFirewireError","summary":"The enumerations to report result of operation in [iface@AlsaFirewire]."},{"type":"domain","name":"EfwProtocolError","ctype":"HitakiEfwProtocolError","summary":"The enumerations to report status of response in Fireworks protocol."},{"type":"enum","name":"AlsaFirewireType","ctype":"HitakiAlsaFirewireType","summary":"The enumerations for type of sound unit defined by ..."},{"type":"interface","name":"AlsaFirewire","ctype":"HitakiAlsaFirewire","summary":"An interface to operate ALSA HwDep character device for ..."},{"type":"interface","name":"EfwProtocol","ctype":"HitakiEfwProtocol","summary":"An interface for Fireworks Protocol. Echo Audio Fireworks devices ..."},{"type":"interface","name":"MotuCommandDsp","ctype":"HitakiMotuCommandDsp","summary":"An interface for protocol of command DSP model in ..."},{"type":"interface","name":"MotuRegisterDsp","ctype":"HitakiMotuRegisterDsp","summary":"An interface for protocol of register DSP models in ..."},{"type":"interface","name":"QuadletNotification","ctype":"HitakiQuadletNotification","summary":"An interface to operate notification with quadlet message. Some ..."},{"type":"interface","name":"TascamProtocol","ctype":"HitakiTascamProtocol","summary":"An interface for protocol of TASCAM FireWire series. TASCAM ..."},{"type":"interface","name":"TimestampedQuadletNotification","ctype":"HitakiTimestampedQuadletNotification","summary":"An interface to operate notification with quadlet message and ..."},{"type":"method","name":"create_source","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_create_source","summary":"Allocate [struct@GLib.Source]  to handle events from ALSA HwDep ..."},{"type":"method","name":"get_headphone_output_paired_assignment","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_assignment","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_headphone_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_input_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_input_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_input_gain_and_invert","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_input_gain_and_invert","summary":"Get the array with elements for input gain and ..."},{"type":"method","name":"get_line_input_boost_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_line_input_boost_flag","summary":"Get the data for flags of line input boost. ..."},{"type":"method","name":"get_line_input_nominal_level_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_line_input_nominal_level_flag","summary":"Get the data for flags of line input nominal ..."},{"type":"method","name":"get_main_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_main_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_output_paired_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_flag","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_gain","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_gain","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_paired_balance","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_balance","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_paired_width","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_width","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_pan","type_name":"SndMotuRegisterDspParameter","ident":"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_pan","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"lock","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_lock","summary":"Lock kernel driver bound to the associated ALSA HwDep ..."},{"type":"method","name":"open","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_open","summary":"Open the special file for ALSA HwDep character device."},{"type":"method","name":"read_byte_meter","type_name":"MotuRegisterDsp","ident":"hitaki_motu_register_dsp_read_byte_meter","summary":"Read cached data of meter information for register DSP models."},{"type":"method","name":"read_float_meter","type_name":"MotuCommandDsp","ident":"hitaki_motu_command_dsp_read_float_meter","summary":"Read cached data of meter information for command DSP models."},{"type":"method","name":"read_parameter","type_name":"MotuRegisterDsp","ident":"hitaki_motu_register_dsp_read_parameter","summary":"Read cached parameter for register DSP models."},{"type":"method","name":"read_state","type_name":"TascamProtocol","ident":"hitaki_tascam_protocol_read_state","summary":"Read the latest image of device state."},{"type":"method","name":"receive_response","type_name":"EfwProtocol","ident":"hitaki_efw_protocol_receive_response","summary":"Parse the given buffer for response frame of Fireworks ..."},{"type":"method","name":"transaction","type_name":"EfwProtocol","ident":"hitaki_efw_protocol_transaction","summary":"Transfer asynchronous transaction for request frame of Echo Efw ..."},{"type":"method","name":"transmit_request","type_name":"EfwProtocol","ident":"hitaki_efw_protocol_transmit_request","summary":"Transfer asynchronous transaction for request frame of Fireworks transaction. ..."},{"type":"method","name":"unlock","type_name":"AlsaFirewire","ident":"hitaki_alsa_firewire_unlock","summary":"Unlock kernel driver bound to the associated ALSA HwDep ..."},{"type":"property","name":"card-id","type_name":"AlsaFirewire","summary":"The numeric identifier for sound card."},{"type":"property","name":"guid","type_name":"AlsaFirewire","summary":"Global unique identifier for the node in IEEE 1394 bus."},{"type":"property","name":"is-disconnected","type_name":"AlsaFirewire","summary":"Whether the sound card is unavailable. It becomes FALSE ..."},{"type":"property","name":"is-locked","type_name":"AlsaFirewire","summary":"Whether the associated unit is locked or not to ..."},{"type":"property","name":"node-device","type_name":"AlsaFirewire","summary":"The name of node device in Linux FireWire subsystem ..."},{"type":"property","name":"unit-type","type_name":"AlsaFirewire","summary":"The type of sound unit."},{"type":"record","name":"SndMotuRegisterDspParameter","ctype":"HitakiSndMotuRegisterDspParameter","summary":"A boxed object for parameters in MOTU register DSP ..."},{"type":"signal","name":"changed","type_name":"MotuRegisterDsp","summary":"Emitted when MOTU register DSP models transfer events by ..."},{"type":"signal","name":"changed","type_name":"TascamProtocol","summary":"Emitted when the part of image differed for the ..."},{"type":"signal","name":"notified","type_name":"QuadletNotification","summary":"Emitted when the target unit transfers notification."},{"type":"signal","name":"notified-at","type_name":"TimestampedQuadletNotification","summary":"Emitted when the target unit transfers notification.  The ..."},{"type":"signal","name":"responded","type_name":"EfwProtocol","summary":"Emitted when the unit transfers asynchronous packet as response ..."},{"type":"type_func","name":"quark","type_name":"AlsaFirewireError","ident":"hitaki_alsa_firewire_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in Hitaki.AlsaFirewireError enumerations."},{"type":"type_func","name":"quark","type_name":"EfwProtocolError","ident":"hitaki_efw_protocol_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in Hitaki.EfwProtocolError enumerations."},{"type":"type_func","name":"to_label","type_name":"AlsaFirewireError","ident":"hitaki_alsa_firewire_error_to_label","summary":"Retrieve the string label of error from code."},{"type":"type_func","name":"to_label","type_name":"EfwProtocolError","ident":"hitaki_efw_protocol_error_to_label","summary":"Retrieve the string label of error."},{"type":"vfunc","name":"changed","type_name":"MotuRegisterDsp","summary":"Class closure for the [signal@MotuRegisterDsp::changed] signal."},{"type":"vfunc","name":"changed","type_name":"TascamProtocol","summary":"Class closure for the [signal@TascamProtocol::changed] signal."},{"type":"vfunc","name":"create_source","type_name":"AlsaFirewire","summary":"Allocate [struct@GLib.Source]  to handle events from ALSA HwDep ..."},{"type":"vfunc","name":"get_seqnum","type_name":"EfwProtocol","summary":"Virtual function to retrieve the sequence number for request ..."},{"type":"vfunc","name":"lock","type_name":"AlsaFirewire","summary":"Lock kernel driver bound to the associated ALSA HwDep ..."},{"type":"vfunc","name":"notified","type_name":"QuadletNotification","summary":"Class closure for the [signal@QuadletNotification::notified] signal."},{"type":"vfunc","name":"notified_at","type_name":"TimestampedQuadletNotification","summary":"No description available."},{"type":"vfunc","name":"open","type_name":"AlsaFirewire","summary":"Open the special file for ALSA HwDep character device."},{"type":"vfunc","name":"read_byte_meter","type_name":"MotuRegisterDsp","summary":"Read cached data of meter information for register DSP models."},{"type":"vfunc","name":"read_float_meter","type_name":"MotuCommandDsp","summary":"Read cached data of meter information for command DSP models."},{"type":"vfunc","name":"read_parameter","type_name":"MotuRegisterDsp","summary":"Read cached parameter for register DSP models."},{"type":"vfunc","name":"read_state","type_name":"TascamProtocol","summary":"Read the latest image of device state."},{"type":"vfunc","name":"responded","type_name":"EfwProtocol","summary":"Class closure for the [signal@EfwProtocol::responded] signal."},{"type":"vfunc","name":"transmit_request","type_name":"EfwProtocol","summary":"Virtual function to transmit the content of request frame ..."},{"type":"vfunc","name":"unlock","type_name":"AlsaFirewire","summary":"Unlock kernel driver bound to the associated ALSA HwDep ..."}],"terms":{"":[6,14,22,32,63,69,70,74,76,82],"+0.5":[6],"+1.0":[6],"+1.5":[6],"+10.0":[6],"+11.0":[6],"+12.0":[6],"+17.0":[6],"+17.5":[6],"+18.0":[6],"+4":[72],"+4.0":[6],"+5.0":[6],"+6.0":[6],"+63.0":[6],"+64.0":[6],"+65.0":[6],"-":[6,69,70,74,76],"-1.0":[6],"-10":[72],"-52.0":[6],"-53.0":[6],"-54.0":[6],"-56.0":[6],"-58.0":[6],"-infinit":[6],"..":[6],"0":[6,50],"0.0":[6],"0/1":[6],"0x00":[68,73,75,77,78,79,80],"0x00000000":[6],"0x000000ff":[6],"0x00000100":[6],"0x00000400":[6],"0x00000800":[6],"0x000008c0":[6],"0x00000900":[6],"0x00000c00":[6],"0x00001400":[6],"0x00001800":[6],"0x00001c00":[6],"0x00002800":[6],"0x00002c00":[6],"0x00003000":[6],"0x00008800":[6],"0x0000e800":[6],"0x0000ec00":[6],"0x0000f000":[6],"0x0000f400":[6],"0x0000f800":[6],"0x0000fc00":[6],"0x00010000":[6],"0x00010400":[6],"0x00ff0000":[6],"0x00fffc00":[6],"0x01":[69,76],"0x01000000":[6],"0x02":[69,76],"0x02000000":[6],"0x04":[69],"0x04000000":[6],"0x08":[69],"0x08000000":[6],"0x0f":[74],"0x10":[74],"0x10000000":[6],"0x1f":[70],"0x20":[70],"0x20000000":[6],"0x30000000":[6],"0x3f":[70],"0x40":[70],"0x40000000":[6],"0x50000000":[6],"0x60000000":[6],"0x70000000":[6],"0x80":[68,73,75,77,78,79,80],"0x80000000":[6],"0x90000000":[6],"0xa0000000":[6],"0xf0000000":[6],"1":[6,41,50],"1.0":[6],"13":[63],"1394":[21,27,63,82],"16":[63],"2/3":[6],"3":[63],"32":[6],"4":[70],"4/5":[6],"400":[6],"6/7":[6],"64":[10],"[iface@alsafirewire]":[14],"[iface@efwprotocol]":[37],"`snd-dice`":[0],"`snd-fireface`":[6],"`snd-firewire-digi00x`":[2],"`snd-firewire-motu`":[8],"`snd-firewire-tascam`":[10],"`snd-fireworks`":[4],"`sound/firewire/motu/motu-register-dsp-message-parser.c":[50],"abstract":[82],"accept":[36],"accord":[10],"adat":[6],"address":[36],"after":[39],"all":[21],"alloc":[22,32],"allow":[21],"alreadi":[14],"alsa":[0,2,4,6,8,10,12,14,20,21,22,23,24,25,28,32,33,34,35,40,54,62,82],"an":[2,4,8,10,12,21,36,44,47,54,57,62,82],"ani":[6,12,14,37],"applic":[21,82],"arrai":[67,68,69,70,73,74,75,76,77,78,79,80],"asic":[0,20],"assign":[67],"associ":[14,23,25,29,33,35],"asynchron":[38,39,40,57],"attenu":[69],"audio":[4,21,36,40,70,82],"avail":[14,64,82],"bad":[17],"bad_channel":[17],"bad_clock":[17],"bad_command":[17],"bad_led":[17],"bad_mirror":[17],"bad_pan":[17],"bad_parameter":[17],"bad_quad_count":[17],"bad_rate":[17],"balanc":[78],"bebob":[20],"becom":[28],"below":[6,69,70,74,76],"between":[14,68,73,75,77,78,79,80],"bind":[82],"bit":[6,63,69,71,72,74,76],"board":[20],"boost":[71],"both":[6],"bound":[23,25,33,35],"box":[65],"bu":[21,27,82],"buffer":[37],"busi":[17],"byte":[6,48,50,52],"cach":[45,46,48,49,52,53],"call":[14,28,38,39],"can":[6,25,35],"cancel":[17],"card":[14,26,28],"categori":[17],"chang":[50,51,57,59,60],"channel":[6,17,71,72],"charact":[14,21,22,23,24,25,28,32,33,34,35],"class":[0,2,4,6,8,10,12,14,42,51,56,60],"clock":[17],"closur":[42,51,56,60],"code":[15,16,18],"comm_err":[17],"command":[17,38,44,45,46],"common":[12,21],"commun":[17],"compos":[39],"condit":[17],"consist":[10,50,69,71,72,74,76],"contain":[65],"content":[40,43],"control":[6],"correspond":[71,72],"creat":[22,32],"cycl":[63],"cycle_tim":[63],"data":[6,38,45,46,48,50,52,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"db":[6],"dbu":[72],"dbv":[72],"decid":[50],"defin":[20],"deliv":[44,47],"depend":[6,50],"deriv":[0,2,4,6,8,10,12],"descript":[64],"destin":[74],"detail":[50],"detect":[6,69],"devic":[4,14,21,22,23,24,25,28,30,32,33,34,35,36,41,43,57,58,59,61],"dice":[0,20],"did":[17],"differ":[6,59,70],"digi00x":[2,20],"digidesign":[2],"disconnect":[14,28],"dispatch":[6,82],"document":[82],"driver":[0,2,4,6,8,10,12,21,23,25,28,33,35,40,54,62,82],"dsp":[17,44,45,46,47,48,49,50,52,53,65],"dsp_timeout":[17],"due":[17],"e.g":[30],"each":[82],"echo":[4,36,38,40],"efw":[4,17,36,38,40],"either":[57],"element":[67,68,69,70,73,74,75,76,77,78,79,80],"els":[72],"emit":[40,50,55,59,63],"enabl":[69,74,76],"encod":[6,50],"enumer":[14,15,17,18,20],"error":[14,16,17,19],"event":[6,22,32,50,82],"expect":[37,41,82],"express":[70],"fail":[14,17],"failed":[14],"fals":[28],"famili":[2],"field":[63],"file":[24,34],"finish":[17],"firefac":[6,20],"fireface":[20],"firewir":[8,10,12,14,20,21,30,44,47,54,57,62,65,82],"firewire-digi00x":[2],"firewire-motu":[8],"firewire-tascam":[10],"firework":[4,17,20,36,37,39],"fireworks":[20],"flag":[6,69,70,71,72,74,76],"flash":[17],"flash_busy":[17],"float":[45,46],"format":[63],"found":[6],"frame":[36,37,38,39,41,43,44,47],"frequenc":[17],"from":[0,2,4,6,8,10,12,16,22,32,40,82],"function":[12,14,21,37,41,43,54,62,76],"fw1":[30],"gain":[70,75,77],"get":[41,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"given":[37],"global":[27],"gobject":[14,82],"gobject-deriv":[0,2,4,6,8,10,12],"group":[70],"guid":[27],"ha":[67,68,73,75,77,78,79,80],"handl":[22,32,36],"have":[54,62],"header":[17],"headphon":[6,67,68],"higher":[63],"hitaki.alsafirewireerror":[15],"hitaki.efwprotocolerror":[18],"hitaki_alsa_firewire_create_source":[22],"hitaki_alsa_firewire_error_quark":[15],"hitaki_alsa_firewire_error_to_label":[16],"hitaki_alsa_firewire_lock":[23],"hitaki_alsa_firewire_open":[24],"hitaki_alsa_firewire_unlock":[25],"hitaki_efw_protocol_error_quark":[18],"hitaki_efw_protocol_error_to_label":[19],"hitaki_efw_protocol_receive_response":[37],"hitaki_efw_protocol_transaction":[38],"hitaki_efw_protocol_transmit_request":[39],"hitaki_motu_command_dsp_read_float_meter":[45],"hitaki_motu_register_dsp_read_byte_meter":[48],"hitaki_motu_register_dsp_read_parameter":[49],"hitaki_snd_dice_new":[1],"hitaki_snd_digi00x_new":[3],"hitaki_snd_efw_new":[5],"hitaki_snd_fireface_new":[7],"hitaki_snd_motu_new":[9],"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_assignment":[67],"hitaki_snd_motu_register_dsp_parameter_get_headphone_output_paired_volume":[68],"hitaki_snd_motu_register_dsp_parameter_get_input_flag":[69],"hitaki_snd_motu_register_dsp_parameter_get_input_gain_and_invert":[70],"hitaki_snd_motu_register_dsp_parameter_get_line_input_boost_flag":[71],"hitaki_snd_motu_register_dsp_parameter_get_line_input_nominal_level_flag":[72],"hitaki_snd_motu_register_dsp_parameter_get_main_output_paired_volume":[73],"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_flag":[74],"hitaki_snd_motu_register_dsp_parameter_get_mixer_output_paired_volume":[75],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_flag":[76],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_gain":[77],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_balance":[78],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_paired_width":[79],"hitaki_snd_motu_register_dsp_parameter_get_mixer_source_pan":[80],"hitaki_snd_motu_register_dsp_parameter_new":[66],"hitaki_snd_tascam_new":[11],"hitaki_snd_unit_new":[13],"hitaki_tascam_protocol_read_state":[58],"hitakialsafirewire":[21],"hitakialsafirewireerror":[14],"hitakialsafirewiretype":[20],"hitakiefwprotocol":[36],"hitakiefwprotocolerror":[17],"hitakimotucommanddsp":[44],"hitakimoturegisterdsp":[47],"hitakiquadletnotification":[54],"hitakisnddice":[0],"hitakisnddigi00x":[2],"hitakisndefw":[4],"hitakisndfireface":[6],"hitakisndmotu":[8],"hitakisndmoturegisterdspparameter":[65],"hitakisndtascam":[10],"hitakisndunit":[12],"hitakitascamprotocol":[57],"hitakitimestampedquadletnotification":[62],"hwdep":[14,21,22,23,24,25,28,32,33,34,35],"id":[26],"identifi":[26,27,50],"ieee":[21,27,63,82],"imag":[10,57,58,59,61],"implement":[4,6,8,10,37,82],"includ":[6,17,21,37,63],"incomplet":[17],"incomplete":[17],"increment":[41],"index":[67],"indic":[74,75,76,77,78,79,80],"inform":[44,45,46,47,48,52],"input":[6,69,70,71,72],"insert":[69],"instanc":[1,3,7,9,11,13,14,66],"instanti":[1,3,5,7,9,11,13,66],"integ":[6,63],"interfac":[6,21,36,44,47,54,57,62],"intern":[39],"interpret":[70],"introspect":[82],"invalid":[17],"invert":[70],"is_disconnected":[14],"is_locked":[14],"is_not_opened":[14],"is_opened":[14],"is_unlocked":[14],"is_used":[14],"isochron":[44,47,50,57],"it":[5,28],"it'":[37],"jack":[69],"just":[6],"kernel":[23,25,33,35,50],"kind":[6],"knob":[6],"l/r":[78],"label":[16,19],"languag":[82],"latest":[58,61],"least":[37,50],"led":[17],"left":[6],"level":[6,72],"librari":[82],"line":[6,71,72],"linux":[30,50,82],"listen":[36],"lock":[23,29,33],"low":[63],"main":[73],"make":[69],"mark":[8,44,47,65],"mask":[6,74],"match":[38],"mean":[50],"mechan":[82],"messag":[6,44,47,50,54,62],"meter":[44,45,46,47,48,52],"microphon":[6],"midi":[6,44,47],"mirror":[17],"mismatch":[14],"mixer":[74,75,76,77,78,79,80],"model":[44,45,46,47,48,49,50,52,53,65],"model-specif":[82],"modul":[20],"most":[50],"motu":[8,20,44,47,50,65],"music":[21,82],"mute":[74,76],"name":[30],"new":[1,3,5,7,9,11,13,66],"next":[50],"node":[27,30],"nomin":[72],"notif":[54,55,62,63],"notifi":[54,55,56,62,63,64],"number":[17,41],"numer":[26],"object":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,21,28,36,44,47,57,65,66,82],"ok":[17],"on":[37,82],"on-board":[17],"open":[24,34],"oper":[14,17,21,54,62,82],"order":[63],"other":[14],"output":[6,67,68,73,74,75],"own":[30],"owner":[28],"oxfw":[20],"packet":[14,23,25,29,33,35,40,44,47,50,57],"pad":[69],"pair":[6,67,68,69,73,74,75,78,79],"pan":[17,80],"paramet":[6,17,39,47,49,53,65],"pars":[37],"part":[21,59],"pcm":[44,47],"per":[37],"phantom":[69],"phase":[70],"physic":[6],"pleas":[82],"plug":[69],"port":[6],"posit":[6],"possibl":[28],"power":[69],"pre":[70],"process":[14,40],"produc":[82],"prohibit":[14,23,33],"protocol":[4,8,10,17,36,38,44,47,57],"purpos":[54,62],"python":[82],"quadlet":[10,17,54,62],"quark":[15,18],"quickli":[28],"rang":[6],"read":[40,45,46,48,49,52,53,58,61],"receiv":[6,37,39],"refer":[82],"regist":[47,48,49,50,52,53,63,65],"releas":[28],"remov":[28],"report":[14,17],"request":[17,36,38,39,41,43],"resourc":[82],"respond":[40,42],"respons":[17,36,37,38,39,40,41],"rest":[63],"result":[14,37,38,39],"retriev":[16,19,41,82],"return":[1,3,5,7,9,11,13,15,18,66],"right":[6],"rme":[6,20],"rubi":[82],"run":[82],"s/pdif":[6],"sampl":[17],"second":[63],"see":[50],"seqnum":[41],"sequenc":[41,50],"seri":[6,8,10,20,44,47,57,65],"should":[28,37],"signal":[6,38,39,42,51,56,60],"signific":[50],"snd":[0,2,4,6,8,10,12,65],"sndrv_firewire_tascam_state_count":[10],"so":[23,25,33,35,82],"solo":[76],"some":[54,62,82],"sound":[0,2,4,6,8,10,12,14,20,26,28,31,82],"sourc":[17,22,32,67,76,77,78,79,80],"space":[36],"special":[24,34],"specif":[12,21,36,54,62],"stack":[10,12,20,21,54,62,82],"stamp":[62],"stand":[71,72],"start":[23,25,29,33,35],"state":[10,57,58,59,61],"statu":[17],"stream":[14,23,25,29,33,35],"string":[16,19],"subsystem":[30,82],"successfulli":[17,40],"support":[0,2,4,6,8,10,12,17,54,62,82],"system":[14,82],"target":[43,55,63],"tascam":[10,20,57],"tcat":[0],"thetyp":[14],"three":[63],"thu":[82],"time":[62],"timeout":[17],"timestamp":[62],"transact":[17,37,38,39,40,41],"transfer":[36,38,39,40,44,47,50,55,57,63],"transmit":[39,41,43],"two":[50,70],"type":[6,20,31,50],"uapi":[10],"ultralit":[70],"unavail":[28],"unbound":[28],"unicorn":[8,44,47,65],"uniqu":[27],"unit":[0,2,4,6,8,10,12,14,20,21,29,30,31,40,54,55,62,63,82],"unless":[6],"unlock":[25,35],"unsign":[6,63],"unsupported":[17],"us":[14,21,37,41,82],"userspac":[21,82],"valu":[6,17,50,63,67,68,73,75,77,78,79,80],"via":[21],"virtual":[41,43],"volum":[68,73,75],"wait":[38],"well":[44,47],"when":[6,28,36,39,40,50,55,59,63,71,72,82],"whether":[28,29,69,70,74,76],"which":[30],"width":[79],"within":[17],"without":[12],"wrong_class":[14],"yet":[14],"zero":[6]}}