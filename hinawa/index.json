{"meta":{"ns":"Hinawa","version":"3.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"class","name":"FwFcp","ctype":"HinawaFwFcp","summary":"A FCP transaction executor to node in IEEE 1394 ..."},{"type":"class","name":"FwNode","ctype":"HinawaFwNode","summary":"An event listener for FireWire node A [class@FwNode] is ..."},{"type":"class","name":"FwReq","ctype":"HinawaFwReq","summary":"A transaction executor to a FireWire unit. A HinawaFwReq ..."},{"type":"class","name":"FwResp","ctype":"HinawaFwResp","summary":"A transaction responder for request initiated by node in ..."},{"type":"class","name":"SndDg00x","ctype":"HinawaSndDg00x","summary":"A notification listener for Digidesign Digi 00x models. A ..."},{"type":"class","name":"SndDice","ctype":"HinawaSndDice","summary":"A notification listener for Dice models. A [class@SndDice] listen ..."},{"type":"class","name":"SndEfw","ctype":"HinawaSndEfw","summary":"A transaction executor for Fireworks models. A [class@SndEfw] is ..."},{"type":"class","name":"SndMotu","ctype":"HinawaSndMotu","summary":"A notification listener for Motu models. A [class@SndMotu] is ..."},{"type":"class","name":"SndTscm","ctype":"HinawaSndTscm","summary":"A state reader for Tascam FireWire models A [class@SndTscm] ..."},{"type":"class","name":"SndUnit","ctype":"HinawaSndUnit","summary":"An event listener for ALSA FireWire sound devices. This ..."},{"type":"content","name":"Overview","href":"overview.html","summary":" This library gives some objects for abstraction to ..."},{"type":"ctor","name":"new","type_name":"FwFcp","ident":"hinawa_fw_fcp_new","summary":"Instantiate [class@FwFcp] object and return the instance."},{"type":"ctor","name":"new","type_name":"FwNode","ident":"hinawa_fw_node_new","summary":"Instantiate [class@FwNode] object and return the instance."},{"type":"ctor","name":"new","type_name":"FwReq","ident":"hinawa_fw_req_new","summary":"Instantiate [class@FwReq] object and return the instance."},{"type":"ctor","name":"new","type_name":"FwResp","ident":"hinawa_fw_resp_new","summary":"Instantiate [class@FwResp] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndDg00x","ident":"hinawa_snd_dg00x_new","summary":"Instantiate [class@SndDg00x] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndDice","ident":"hinawa_snd_dice_new","summary":"Instantiate [class@SndDice] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndEfw","ident":"hinawa_snd_efw_new","summary":"Instantiate [class@SndEfw] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndMotu","ident":"hinawa_snd_motu_new","summary":"Instantiate [class@SndMotu] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndTscm","ident":"hinawa_snd_tscm_new","summary":"Instantiate [class@SndTscm] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndUnit","ident":"hinawa_snd_unit_new","summary":"Instantiate [class@SndUnit] object and return the instance."},{"type":"ctor","name":"new","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_new","summary":"Instantiate [struct@SndMotuRegisterDspParameter] object and return the instance."},{"type":"domain","name":"FwFcpError","ctype":"HinawaFwFcpError","summary":"A set of error code for [struct@GLib.Error] with domain ..."},{"type":"domain","name":"FwNodeError","ctype":"HinawaFwNodeError","summary":"A set of error code for [struct@GLib.Error] with domain ..."},{"type":"domain","name":"FwReqError","ctype":"HinawaFwReqError","summary":"A set of error code for [class@Hinawa.FwReq]. Each of ..."},{"type":"domain","name":"FwRespError","ctype":"HinawaFwRespError","summary":"A set of error code for [struct@GLib.Error] with domain ..."},{"type":"domain","name":"SndDiceError","ctype":"HinawaSndDiceError","summary":"A set of error code for [structGLib.Error] with domain ..."},{"type":"domain","name":"SndUnitError","ctype":"HinawaSndUnitError","summary":"A set of error code for [struct@GLib.Error] with domain ..."},{"type":"enum","name":"FwRcode","ctype":"HinawaFwRcode","summary":"A representation for rcode of asynchronous transaction on IEEE ..."},{"type":"enum","name":"FwTcode","ctype":"HinawaFwTcode","summary":"A representation for tcode of asynchronous transaction on IEEE ..."},{"type":"enum","name":"SndEfwStatus","ctype":"HinawaSndEfwStatus","summary":"A set of status code for Echo Audio Fireworks Transaction."},{"type":"enum","name":"SndUnitType","ctype":"HinawaSndUnitType","summary":"A representation of type for sound unit defined by ..."},{"type":"method","name":"avc_transaction","type_name":"FwFcp","ident":"hinawa_fw_fcp_avc_transaction","summary":"Finish the pair of asynchronous transaction for AV/C command ..."},{"type":"method","name":"bind","type_name":"FwFcp","ident":"hinawa_fw_fcp_bind","summary":"Start to listen to FCP responses."},{"type":"method","name":"command","type_name":"FwFcp","ident":"hinawa_fw_fcp_command","summary":"Transfer command frame for FCP. When receiving response frame ..."},{"type":"method","name":"create_source","type_name":"FwNode","ident":"hinawa_fw_node_create_source","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for the ..."},{"type":"method","name":"create_source","type_name":"SndUnit","ident":"hinawa_snd_unit_create_source","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for the ..."},{"type":"method","name":"get_config_rom","type_name":"FwNode","ident":"hinawa_fw_node_get_config_rom","summary":"Get cached content of configuration ROM aligned to big-endian."},{"type":"method","name":"get_headphone_output_paired_assignment","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_headphone_output_paired_assignment","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_headphone_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_headphone_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_input_flag","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_input_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_input_gain_and_invert","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_input_gain_and_invert","summary":"Get the array with elements for input gain and ..."},{"type":"method","name":"get_line_input_boost_flag","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_line_input_boost_flag","summary":"Get the data for flags of line input boost. ..."},{"type":"method","name":"get_line_input_nominal_level_flag","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_line_input_nominal_level_flag","summary":"Get the data for flags of line input nominal ..."},{"type":"method","name":"get_main_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_main_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_output_paired_flag","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_mixer_output_paired_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_output_paired_volume","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_mixer_output_paired_volume","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_flag","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_flag","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_gain","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_gain","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_paired_balance","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_paired_balance","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_paired_width","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_paired_width","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_mixer_source_pan","type_name":"SndMotuRegisterDspParameter","ident":"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_pan","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"get_node","type_name":"SndUnit","ident":"hinawa_snd_unit_get_node","summary":"Retrieve an instance of [class@FwNode] associated to the given unit."},{"type":"method","name":"get_req_frame","type_name":"FwResp","ident":"hinawa_fw_resp_get_req_frame","summary":"Retrieve byte frame to be requested."},{"type":"method","name":"get_state","type_name":"SndTscm","ident":"hinawa_snd_tscm_get_state","summary":"Get the latest states of target device."},{"type":"method","name":"lock","type_name":"SndUnit","ident":"hinawa_snd_unit_lock","summary":"Disallow corresponding ALSA driver to start packet streaming."},{"type":"method","name":"open","type_name":"FwNode","ident":"hinawa_fw_node_open","summary":"Open Linux FireWire character device to operate node on ..."},{"type":"method","name":"open","type_name":"SndDg00x","ident":"hinawa_snd_dg00x_open","summary":"Open ALSA hwdep character device and check it for ..."},{"type":"method","name":"open","type_name":"SndDice","ident":"hinawa_snd_dice_open","summary":"Open ALSA hwdep character device and check it for ..."},{"type":"method","name":"open","type_name":"SndEfw","ident":"hinawa_snd_efw_open","summary":"Open ALSA hwdep character device and check it for ..."},{"type":"method","name":"open","type_name":"SndMotu","ident":"hinawa_snd_motu_open","summary":"Open ALSA hwdep character device and check it for ..."},{"type":"method","name":"open","type_name":"SndTscm","ident":"hinawa_snd_tscm_open","summary":"Open ALSA hwdep character device and check it for ..."},{"type":"method","name":"open","type_name":"SndUnit","ident":"hinawa_snd_unit_open","summary":"Open ALSA hwdep character device and check it for ..."},{"type":"method","name":"read_command_dsp_meter","type_name":"SndMotu","ident":"hinawa_snd_motu_read_command_dsp_meter","summary":"Read data of meter information for command DSP models."},{"type":"method","name":"read_register_dsp_meter","type_name":"SndMotu","ident":"hinawa_snd_motu_read_register_dsp_meter","summary":"Read data of meter information for register DSP models."},{"type":"method","name":"read_register_dsp_parameter","type_name":"SndMotu","ident":"hinawa_snd_motu_read_register_dsp_parameter","summary":"Read parameter for register DSP models."},{"type":"method","name":"release","type_name":"FwResp","ident":"hinawa_fw_resp_release","summary":"stop to listen to a range of address in ..."},{"type":"method","name":"reserve","type_name":"FwResp","ident":"hinawa_fw_resp_reserve","summary":"Start to listen to a range of address in ..."},{"type":"method","name":"reserve_within_region","type_name":"FwResp","ident":"hinawa_fw_resp_reserve_within_region","summary":"Start to listen to range of address equals to ..."},{"type":"method","name":"set_resp_frame","type_name":"FwResp","ident":"hinawa_fw_resp_set_resp_frame","summary":"Register byte frame as response."},{"type":"method","name":"transaction","type_name":"FwFcp","ident":"hinawa_fw_fcp_transaction","summary":"Finish the pair of command and response transactions for ..."},{"type":"method","name":"transaction","type_name":"FwReq","ident":"hinawa_fw_req_transaction","summary":"Execute request subaction of transaction to the given node ..."},{"type":"method","name":"transaction","type_name":"SndDice","ident":"hinawa_snd_dice_transaction","summary":"Execute write transactions to the given address, then wait ..."},{"type":"method","name":"transaction","type_name":"SndEfw","ident":"hinawa_snd_efw_transaction","summary":"Transfer request of transaction according to Echo Fireworks Transaction ..."},{"type":"method","name":"transaction_async","type_name":"FwReq","ident":"hinawa_fw_req_transaction_async","summary":"Execute request subaction of transactions to the given node ..."},{"type":"method","name":"transaction_async","type_name":"SndEfw","ident":"hinawa_snd_efw_transaction_async","summary":"Transfer asynchronous transaction for command frame of Echo Fireworks ..."},{"type":"method","name":"transaction_sync","type_name":"FwReq","ident":"hinawa_fw_req_transaction_sync","summary":"Execute request subaction of transaction to the given node ..."},{"type":"method","name":"transaction_sync","type_name":"SndEfw","ident":"hinawa_snd_efw_transaction_sync","summary":"Transfer asynchronous transaction for command frame of Echo Fireworks ..."},{"type":"method","name":"unbind","type_name":"FwFcp","ident":"hinawa_fw_fcp_unbind","summary":"Stop to listen to FCP responses."},{"type":"method","name":"unlock","type_name":"SndUnit","ident":"hinawa_snd_unit_unlock","summary":"Allow corresponding ALSA driver to start packet streaming."},{"type":"property","name":"bus-manager-node-id","type_name":"FwNode","summary":"Node ID of node which plays role of bus ..."},{"type":"property","name":"card","type_name":"SndUnit","summary":"No description available."},{"type":"property","name":"device","type_name":"SndUnit","summary":"No description available."},{"type":"property","name":"generation","type_name":"FwNode","summary":"Current generation of bus topology."},{"type":"property","name":"guid","type_name":"SndUnit","summary":"No description available."},{"type":"property","name":"ir-manager-node-id","type_name":"FwNode","summary":"Node ID of node which plays role of isochronous ..."},{"type":"property","name":"is-bound","type_name":"FwFcp","summary":"Whether this protocol is bound to any instance of HinawaFwNode."},{"type":"property","name":"is-reserved","type_name":"FwResp","summary":"Whether a range of address is reserved or not ..."},{"type":"property","name":"local-node-id","type_name":"FwNode","summary":"Node ID of node which application uses to communicate ..."},{"type":"property","name":"node-id","type_name":"FwNode","summary":"Node ID of node associated to instance of object ..."},{"type":"property","name":"offset","type_name":"FwResp","summary":"The start offset of reserved address range."},{"type":"property","name":"root-node-id","type_name":"FwNode","summary":"Node ID of root node in bus topology at ..."},{"type":"property","name":"streaming","type_name":"SndUnit","summary":"No description available."},{"type":"property","name":"timeout","type_name":"FwFcp","summary":"Since 1.4"},{"type":"property","name":"timeout","type_name":"FwReq","summary":"No description available."},{"type":"property","name":"type","type_name":"SndUnit","summary":"No description available."},{"type":"property","name":"width","type_name":"FwResp","summary":"The width of reserved address range."},{"type":"record","name":"SndMotuRegisterDspParameter","ctype":"HinawaSndMotuRegisterDspParameter","summary":"A boxed object for container of parameter in register ..."},{"type":"signal","name":"bus-update","type_name":"FwNode","summary":"Emitted when IEEE 1394 bus is updated. Handlers can ..."},{"type":"signal","name":"control","type_name":"SndTscm","summary":"Emitted when TASCAM FireWire unit transfer control message. is emitted."},{"type":"signal","name":"disconnected","type_name":"FwNode","summary":"Emitted when the node is not available anymore due ..."},{"type":"signal","name":"disconnected","type_name":"SndUnit","summary":"Emitted when the sound card is not available anymore ..."},{"type":"signal","name":"lock-status","type_name":"SndUnit","summary":"Emitted when corresponding ALSA driver changes status of lock ..."},{"type":"signal","name":"message","type_name":"SndDg00x","summary":"Emitted when Dg00x models transfer notification."},{"type":"signal","name":"notified","type_name":"SndDice","summary":"Emitted when Dice unit transfers notification."},{"type":"signal","name":"notified","type_name":"SndMotu","summary":"Emitted when Motu models transfer notification."},{"type":"signal","name":"register-dsp-changed","type_name":"SndMotu","summary":"Emitted when MOTU register DSP models transfer events by ..."},{"type":"signal","name":"requested","type_name":"FwResp","summary":"Emitted when any node transfers requests to the range ..."},{"type":"signal","name":"requested2","type_name":"FwResp","summary":"Emitted when any node transfers request subaction to the ..."},{"type":"signal","name":"responded","type_name":"FwFcp","summary":"Emitted when the node transfers asynchronous packet as response ..."},{"type":"signal","name":"responded","type_name":"FwReq","summary":"Emitted when the unit transfers asynchronous packet as response ..."},{"type":"signal","name":"responded","type_name":"SndEfw","summary":"Emitted when the unit transfers asynchronous packet as response ..."},{"type":"type_func","name":"error_quark","type_name":"SndEfw","ident":"hinawa_snd_efw_error_quark","summary":"Return the [alias@GLib.Quark] for error domain of [struct@GLib.Error] which ..."},{"type":"type_func","name":"quark","type_name":"FwFcpError","ident":"hinawa_fw_fcp_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] which has code in Hinawa.FwFcpError."},{"type":"type_func","name":"quark","type_name":"FwNodeError","ident":"hinawa_fw_node_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with Hinawa.FwNodeError domain."},{"type":"type_func","name":"quark","type_name":"FwReqError","ident":"hinawa_fw_req_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with code of [enum@FwRcode]."},{"type":"type_func","name":"quark","type_name":"FwRespError","ident":"hinawa_fw_resp_error_quark","summary":"Return the [alias@GLib.Quark] for error domain of [struct@GLib.Error] which ..."},{"type":"type_func","name":"quark","type_name":"SndDiceError","ident":"hinawa_snd_dice_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] which has code in Hinawa.SndDiceError."},{"type":"type_func","name":"quark","type_name":"SndUnitError","ident":"hinawa_snd_unit_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] which has code in Hinawa.SndUnitError."},{"type":"vfunc","name":"bus_update","type_name":"FwNode","summary":"Class closure for the [signal@FwNode::bus-update]."},{"type":"vfunc","name":"control","type_name":"SndTscm","summary":"Class closure for the [signal@SndTscm::control] signal."},{"type":"vfunc","name":"disconnected","type_name":"FwNode","summary":"Class closure for the [signal@FwNode::disconnected]."},{"type":"vfunc","name":"disconnected","type_name":"SndUnit","summary":"Class closure for the [signal@SndUnit::disconnected]."},{"type":"vfunc","name":"lock_status","type_name":"SndUnit","summary":"Class closure for the [signal@SndUnit::lock-status],"},{"type":"vfunc","name":"message","type_name":"SndDg00x","summary":"Class closure for the [signal@SndDg00x::message] signal."},{"type":"vfunc","name":"notified","type_name":"SndDice","summary":"Class closure for the [signal@SndDice::notified]."},{"type":"vfunc","name":"notified","type_name":"SndMotu","summary":"Class closure for the [signal@SndMotu::notified] signal."},{"type":"vfunc","name":"register_dsp_changed","type_name":"SndMotu","summary":"Class closure for the [signal@SndMotu::register-dsp-changed] signal."},{"type":"vfunc","name":"requested","type_name":"FwResp","summary":"Class closure for the [signal@FwResp::requested] signal."},{"type":"vfunc","name":"requested2","type_name":"FwResp","summary":"Class closure for the [signal@FwResp::requested2] signal."},{"type":"vfunc","name":"responded","type_name":"FwFcp","summary":"Class closure for the [signal@FwFcp::responded] signal."},{"type":"vfunc","name":"responded","type_name":"FwReq","summary":"Class closure for the [signal@FwReq::responded] signal."},{"type":"vfunc","name":"responded","type_name":"SndEfw","summary":"Class closure for the [signal@SndEfw::responded] signal."}],"terms":{"":[0,26,34,44,120,121,125,127,133],"\t\t\t\tcharact":[110],"\t\t\t\tfirewir":[102],"'av/c":[0],"+4":[123],"-":[120,121,125,127],"-10":[123],"/":[0],"0":[75],"00x":[48],"0x00":[119,124,126,128,129,130,131],"0x01":[120,127],"0x02":[120,127],"0x04":[120],"0x08":[120],"0x0f":[125],"0x10":[125],"0x1f":[121],"0x20":[121],"0x3f":[121],"0x40":[121],"0x80":[119,124,126,128,129,130,131],"1":[0,75],"1.4":[8],"1212":[26],"1394":[0,11,13,15,19,22,23,34,37,39,112,113,133],"1394ta":[0],"200":[62],"2004":[0],"4":[121],"4.2'":[0],"61883-1":[0],"8bit":[0],"[class@fwnode]":[133],"[class@fwresp]":[0],"[class@hinawa.fwreq]":[104],"[enum@fwrcode]":[105],"[enum@fwtcode]":[44],"[enum@hinawa.fwrcode]":[104],"[enum@sndefwstatus]":[65],"[libhitaki]https://github.com/alsa-project/libhitaki":[133],"[method@fwresp.set_resp_frame]":[44],"[signal@fwnode::bus-update]":[24],"[signal@fwnode::disconnected]":[25],"[signal@snddice::notified]":[58],"[signal@sndunit::disconnected]":[98],"[signal@sndunit::lock-status]":[99],"[structglib.error]":[108],"`sound/firewire/motu/motu-register-dsp-message-parser.c":[75],"abstract":[133],"accord":[28,29,30,62],"acknowledg":[104,112],"addr_space_used":[106],"address":[37,38,39,41,42,43,44,45,56,104,106,112],"address_error":[104,112],"advanc":[2],"after":[20],"against":[0],"align":[0,14],"all":[11,26,34],"allow":[90],"alreadi":[44,102,106,110,133],"alsa":[50,55,61,66,70,81,84,88,89,90,96,97,133],"an":[0,11,26,34,59,68,78,84,87],"ani":[0,7,44,45,84],"anymor":[23,96],"applic":[0,11,19,26,34,59,68,78,84,97,133],"argument":[28],"arrai":[118,119,120,121,124,125,126,127,128,129,130,131],"arriv":[2,29,45],"asic":[115],"assign":[44,118],"assist":[133],"associ":[19,20,87,102,106,110],"async":[29,63],"asynchron":[2,9,32,63,64,66,68,112,113,133],"attenu":[120],"audio":[66,114,121,133],"av/c":[2],"avail":[23,31,84,91,92,93,94,95,96,133],"avc":[2],"bad":[114],"bad_channel":[114],"bad_clock":[114],"bad_command":[114],"bad_led":[114],"bad_mirror":[114],"bad_pan":[114],"bad_parameter":[114],"bad_quad_count":[114],"bad_rate":[114],"balanc":[129],"bebob":[115],"been":[133],"below":[120,121,125,127],"between":[39,119,124,126,128,129,130,131],"big-endian":[14],"bind":[3,133],"bit":[120,122,123,125,127],"block":[113],"board":[115],"boost":[122],"bound":[7],"bounded-add":[113],"box":[116],"bu":[0,11,13,15,16,17,18,19,20,21,22,23,24,34,112,113,133],"busi":[114],"busy":[104,112],"byte":[0,36,40,75],"cach":[14],"call":[23,29,44,45,66,96,102,106,110],"caller":[2],"can":[22,44,84],"cancel":[100,104,108,112,114],"cancelled":[104,112],"card":[91,96],"case":[2,44],"categori":[114],"chang":[75,77,97],"channel":[114,122,123],"charact":[15,50,55,61,70,81,89,96,102],"check":[50,55,56,61,70,81,89],"class":[0,10,11,24,25,26,33,34,46,47,52,58,67,76,77,83,84,98,99,110],"clock":[114],"closur":[10,24,25,33,46,47,52,58,67,76,77,83,98,99],"code":[28,29,30,65,100,101,102,104,105,106,107,108,109,110,111,114],"comm_err":[114],"command":[0,2,4,5,11,26,34,63,64,71,114],"commun":[19,39,114,133],"compare-swap":[113],"complet":[112],"complete":[112],"config":[14],"configur":[14],"conflict":[104,112],"conflict_error":[104,112],"connect":[38],"consist":[75,120,122,123,125,127],"contain":[116],"content":[0,9,14,29,32,66],"control":[0,19,37,38,39,41,82,83],"correspond":[88,90,97,104,122,123],"creat":[13,86],"current":[16,17,18,19,20,21,22],"cycl":[113],"cycle_start":[113],"data":[44,71,72,75,104,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"data_error":[104,112],"dbu":[123],"dbv":[123],"decid":[75],"defin":[0,68,78,115],"depend":[75],"descript":[31,91,92,93,94,95],"descriptor":[23],"destin":[125],"detail":[75],"detect":[120],"devic":[15,50,55,61,70,80,81,84,86,89,92,96,102,110],"dg00x":[48,50,51],"dice":[53,55,57,108,115],"did":[114],"differ":[121],"digi":[48],"digi00x":[115],"digidesign":[48],"digit":[0],"disallow":[88],"disconnect":[23,25,96,98,102,110],"disconnected":[102,110],"dispatch":[13,29,86,133],"document":[133],"domain":[65,100,102,103,106,107,108,110],"driver":[66,84,88,90,96,97,133],"dsp":[71,72,73,75,77,114,116],"dsp_timeout":[114],"due":[23,96,100,108,114],"e.g":[37,39],"each":[104,133],"echo":[59,62,63,64,66,114],"effect":[20],"efw":[59,114],"element":[118,119,120,121,124,125,126,127,128,129,130,131],"els":[123],"emit":[4,9,22,23,32,44,45,51,57,63,66,74,75,82,96,97],"enabl":[120,125,127],"encod":[75],"enumer":[104],"equal":[39,100,102,106,108,110],"error":[65,100,102,104,106,107,108,110,112,114],"event":[11,13,29,75,84,86,133],"exact":[38],"exclus":[106],"execut":[28,29,30,56],"executor":[0,26,59],"expand":[2],"expect":[45,100,110,114,133],"express":[121],"fail":[102,110,114],"failed":[102,106,110],"fcp":[0,3,4,5,6,9,100],"fetch-add":[113],"file":[23],"finish":[2,5,114],"firefac":[115],"fireface":[115],"firewir":[11,15,26,32,34,78,82,84,89,115,133],"firework":[59,61,62,63,64,66,114,115],"fireworks":[115],"flag":[120,121,122,123,125,127],"flash":[114],"flash_busy":[114],"frame":[0,4,36,40,44,45,63,64],"frequenc":[114],"from":[23,32,66,133],"function":[0,38,84,127],"fw":[0,11,26,34,100,102,104,106,112,113],"gain":[121,126,128],"gener":[0,16,17,18,19,20,21,22,48,53,104,106,112],"generation":[104,112],"get":[14,36,44,80,87,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"give":[133],"given":[28,29,30,38,39,56,64,87],"gobject":[63,133],"group":[121],"guid":[93],"ha":[65,101,104,107,109,111,118,119,124,126,128,129,130,131,133],"handler":[22,29,44,45,66],"header":[114],"headphon":[118,119],"hedep":[110],"hinawa.fwfcperror":[100,101],"hinawa.fwnodeerror":[102,103],"hinawa.fwresperror":[106,107],"hinawa.snddiceerror":[108,109],"hinawa.snduniterror":[110,111],"hinawa_fw_fcp_avc_transaction":[2],"hinawa_fw_fcp_bind":[3],"hinawa_fw_fcp_command":[4],"hinawa_fw_fcp_error_quark":[101],"hinawa_fw_fcp_new":[1],"hinawa_fw_fcp_transaction":[5],"hinawa_fw_fcp_unbind":[6],"hinawa_fw_node_create_source":[13],"hinawa_fw_node_error_quark":[103],"hinawa_fw_node_get_config_rom":[14],"hinawa_fw_node_new":[12],"hinawa_fw_node_open":[15],"hinawa_fw_req_error_quark":[105],"hinawa_fw_req_new":[27],"hinawa_fw_req_transaction":[28],"hinawa_fw_req_transaction_async":[29],"hinawa_fw_req_transaction_sync":[30],"hinawa_fw_resp_error_quark":[107],"hinawa_fw_resp_get_req_frame":[36],"hinawa_fw_resp_new":[35],"hinawa_fw_resp_release":[37],"hinawa_fw_resp_reserve":[38],"hinawa_fw_resp_reserve_within_region":[39],"hinawa_fw_resp_set_resp_frame":[40],"hinawa_snd_dg00x_new":[49],"hinawa_snd_dg00x_open":[50],"hinawa_snd_dice_error_quark":[109],"hinawa_snd_dice_new":[54],"hinawa_snd_dice_open":[55],"hinawa_snd_dice_transaction":[56],"hinawa_snd_efw_error_quark":[65],"hinawa_snd_efw_new":[60],"hinawa_snd_efw_open":[61],"hinawa_snd_efw_transaction":[62],"hinawa_snd_efw_transaction_async":[63],"hinawa_snd_efw_transaction_sync":[64],"hinawa_snd_motu_new":[69],"hinawa_snd_motu_open":[70],"hinawa_snd_motu_read_command_dsp_meter":[71],"hinawa_snd_motu_read_register_dsp_meter":[72],"hinawa_snd_motu_read_register_dsp_parameter":[73],"hinawa_snd_motu_register_dsp_parameter_get_headphone_output_paired_assignment":[118],"hinawa_snd_motu_register_dsp_parameter_get_headphone_output_paired_volume":[119],"hinawa_snd_motu_register_dsp_parameter_get_input_flag":[120],"hinawa_snd_motu_register_dsp_parameter_get_input_gain_and_invert":[121],"hinawa_snd_motu_register_dsp_parameter_get_line_input_boost_flag":[122],"hinawa_snd_motu_register_dsp_parameter_get_line_input_nominal_level_flag":[123],"hinawa_snd_motu_register_dsp_parameter_get_main_output_paired_volume":[124],"hinawa_snd_motu_register_dsp_parameter_get_mixer_output_paired_flag":[125],"hinawa_snd_motu_register_dsp_parameter_get_mixer_output_paired_volume":[126],"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_flag":[127],"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_gain":[128],"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_paired_balance":[129],"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_paired_width":[130],"hinawa_snd_motu_register_dsp_parameter_get_mixer_source_pan":[131],"hinawa_snd_motu_register_dsp_parameter_new":[117],"hinawa_snd_tscm_get_state":[80],"hinawa_snd_tscm_new":[79],"hinawa_snd_tscm_open":[81],"hinawa_snd_unit_create_source":[86],"hinawa_snd_unit_error_quark":[111],"hinawa_snd_unit_get_node":[87],"hinawa_snd_unit_lock":[88],"hinawa_snd_unit_new":[85],"hinawa_snd_unit_open":[89],"hinawa_snd_unit_unlock":[90],"hinawafwfcp":[0],"hinawafwfcperror":[100],"hinawafwnod":[7],"hinawafwnode":[11],"hinawafwnodeerror":[102],"hinawafwrcode":[112],"hinawafwreq":[26],"hinawafwreqerror":[104],"hinawafwresp":[34],"hinawafwresperror":[106],"hinawafwtcode":[113],"hinawasnddg00x":[48],"hinawasnddice":[53],"hinawasnddiceerror":[108],"hinawasndefw":[59],"hinawasndefwstatus":[114],"hinawasndmotu":[68],"hinawasndmoturegisterdspparameter":[116],"hinawasndtscm":[78],"hinawasndunit":[84],"hinawasnduniterror":[110],"hinawasndunittype":[115],"host":[38,39,41],"hot":[96],"howev":[133],"hwdep":[50,55,61,70,81,89,96,110],"id":[16,18,19,20,21],"identifi":[75],"iec":[0],"ieee":[0,11,13,15,22,23,26,34,112,113,133],"ignor":[2,30],"immedi":[23],"implement":[133],"includ":[114],"index":[118],"indic":[125,126,127,128,129,130,131],"inform":[71,72],"initi":[2,5,34],"input":[120,121,122,123],"insert":[120],"instanc":[1,2,7,12,19,20,27,30,35,49,54,60,69,79,85,87,102,106,110,117],"instanti":[1,12,27,35,49,54,60,69,79,85,117],"interfac":[0],"interim":[2],"interpret":[121],"introspect":[133],"invalid":[104,112,114],"invert":[121],"ioctl2":[11,26,34],"ir":[18],"isochron":[18,75],"it'":[23],"jack":[120],"kernel":[75,110],"l/r":[129],"languag":[133],"large_resp":[100,114],"larger":[100,114],"latest":[80],"least":[75],"led":[114],"level":[123],"libhinawa":[133],"libhinawa]overview.png":[133],"librari":[133],"line":[122,123],"linux":[11,15,26,32,34,75,115,133],"listen":[3,6,11,37,38,39,44,45,48,53,68,84],"little-add":[113],"local":[19,37,39],"lock":[26,88,97,99,110,113],"lock_bounded_add":[113],"lock_compare_swap":[113],"lock_fetch_add":[113],"lock_little_add":[113],"lock_mask_swap":[113],"lock_request":[113],"lock_response":[113],"lock_vendor_dependent":[113],"lock_wrap_add":[113],"locked":[110],"long":[29],"look":[39],"loos":[0],"main":[124],"mainli":[26,133],"make":[120],"manag":[16,18],"mark":[68],"mask":[125],"mask-swap":[113],"match":[0],"mean":[75],"mechan":[133],"messag":[51,52,75,82],"meter":[71,72],"migrat":[133],"millisecond":[62],"mirror":[114],"mixer":[125,126,127,128,129,130,131],"model":[48,51,53,59,68,71,72,73,74,75,78,116],"model-specif":[133],"modul":[115],"most":[75],"motu":[68,70,74,75,115,116],"music":[133],"mute":[125,127],"new":[1,12,27,35,49,54,60,69,79,85,117],"next":[75],"no_ack":[104,112],"node":[0,9,11,13,15,16,18,19,20,21,23,28,29,30,34,37,38,39,44,45,87,102,133],"nomin":[123],"not_opened":[102,110],"notif":[48,51,53,56,57,68,74],"notifi":[57,58,74,76],"nowadai":[133],"number":[114],"object":[1,12,19,20,27,35,44,45,49,54,60,69,79,85,96,116,117,133],"obsolet":[133],"offset":[42],"ohci":[19,37,39],"ok":[114],"on":[133],"on-board":[114],"open":[15,50,55,61,70,81,89,102,110],"opened":[102,110],"oper":[11,15,26,34,114,133],"origin":[133],"out":[104,112],"output":[118,119,124,125,126],"owner":[96],"oxfw":[115],"packet":[9,32,66,75,88,90,97,110],"pad":[120],"pair":[0,2,5,118,119,120,124,125,126,129,130],"pan":[114,131],"paramet":[2,20,39,66,73,114,116],"pcm/rawmidi":[97],"phantom":[120],"phase":[121],"plai":[16,18],"pleas":[133],"plug":[120],"possibl":[96],"power":[120],"pre":[121],"prefer":[23],"process":[9,32,66],"properti":[2,5,22,30],"protocol":[0,7,62,63,64,66,78],"python":[133],"quadlet":[113,114],"quark":[65,101,103,105,107,109,111],"quickli":[96],"rang":[37,38,39,41,42,43,44,45,106],"rcode":[104,112],"read":[9,22,26,29,32,66,71,72,73,113],"read_block_request":[113],"read_block_response":[113],"read_quadlet_request":[113],"read_quadlet_response":[113],"reader":[78],"receiv":[4,48,53,63],"refer":[133],"region":[39],"region_end":[39],"region_start":[39],"regist":[40,72,73,75,77,116],"releas":[23,37,96,133],"remov":[23],"represent":[112,113,115],"req":[26,36,104],"request":[11,26,28,29,30,34,36,44,45,46,62,97,113,114],"requested2":[45,47],"reserv":[38,39,41,42,43,106],"reserved":[106],"resourc":[18,133],"resp":[34,40,106],"respond":[9,10,32,33,34,66,67],"respons":[0,2,3,4,5,6,9,28,29,30,32,40,44,45,62,63,64,66,100,108,113,114],"retriev":[36,87],"return":[1,12,27,35,44,45,49,54,60,65,69,79,85,101,103,105,107,109,111,117],"rme":[115],"role":[16,18],"rom":[14],"root":[21],"rubi":[133],"run":[29,133],"same":[104],"sampl":[114],"see":[75],"send":[104,112],"send_error":[104,112],"sep":[0],"sequenc":[75],"seri":[115],"set":[0,40,44,100,102,104,106,108,110,114],"should":[0,2,38,96],"signal":[4,10,29,33,44,45,46,47,48,52,53,63,66,67,76,77,83],"signific":[75],"sinc":[2,5,8,133],"size":[100,114],"snd":[48,53,59,68,78,84,108,110,114,115,116],"so":[38,133],"solo":[127],"some":[26,133],"sound":[84,86,89,96,115],"sourc":[13,86,114,118,127,128,129,130,131],"space":[106],"specif":[0,11,26,34,104,112],"specifi":[11],"stack":[84,133],"stand":[122,123],"start":[3,38,39,42,88,90,113],"starting/stop":[97],"state":[78,80],"statu":[2,97,99,114],"stop":[6,37],"stream":[88,90,94,97,110,113],"stream_data":[113],"subact":[28,29,30,32,44,45],"subsystem":[11,26,32,34,115,133],"successfulli":[9,32,66,114],"support":[0,26,114,133],"sync":[30,64],"system":[102,106,110,133],"target":[80],"tascam":[78,81,82,115],"tcode":[113],"than":[100,114],"them":[104],"thu":[2,133],"timeout":[2,8,28,30,31,62,64,100,108,114],"timeout_m":[2],"topolog":[16,17,18,19,20,21],"transact":[0,2,5,26,28,29,30,32,34,56,59,62,63,64,100,108,112,113,114],"transfer":[4,9,32,44,45,51,57,62,63,64,66,74,75,82],"tscm":[78],"two":[75,121],"type":[26,75,95,104,112,115],"type_error":[104,112],"ultralit":[121],"unbind":[6,96],"unicorn":[68],"unit":[26,32,57,66,82,84,87,110,115,133],"unlock":[90],"unlocked":[110],"unplug":[96],"unsupported":[114],"up":[39],"updat":[22,24],"us":[2,5,19,39,106,110,133],"used":[110],"userspac":[133],"util":[11,26,34],"v2.5":[133],"valu":[5,28,75,104,114,118,119,124,126,128,129,130,131],"variant":[38],"vendor-depend":[113],"version":[0],"via":[22],"volum":[119,124,126],"wai":[0],"wait":[2,5,28,30,56,62,64],"well":[133],"when":[4,9,22,23,29,32,44,45,48,51,53,57,63,66,74,75,82,96,97,122,123,133],"whether":[7,41,120,121,125,127],"which":[0,16,18,19,38,39,44,45,65,84,100,101,102,106,107,108,109,110,111],"width":[43,130],"within":[28,30,39,62,64,114],"without":[44],"wrap-add":[113],"write":[26,56,113],"write_block_request":[113],"write_quadlet_request":[113],"write_response":[113],"wrong_class":[110],"yet":[110]}}