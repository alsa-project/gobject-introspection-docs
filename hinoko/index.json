{"meta":{"ns":"Hinoko","version":"1.0","generator":"gi-docgen","generator-version":"2023.3"},"symbols":[{"type":"bitfield","name":"FwIsoCtxMatchFlag","ctype":"HinokoFwIsoCtxMatchFlag","summary":"A set of tag field of isochronous packet on IEEE 1394 bus.","deprecated":null},{"type":"class","name":"FwIsoIrMultiple","ctype":"HinokoFwIsoIrMultiple","summary":"An object to receive isochronous packet for several channels. [class@FwIsoIrMultiple] receives isochronous packets for several channels by buffer-fill mode ...","deprecated":null},{"type":"class","name":"FwIsoIrSingle","ctype":"HinokoFwIsoIrSingle","summary":"An object to receive isochronous packet for single channel. [class@FwIsoIrSingle] receives isochronous packets for single channel by packet-per-buffer mode ...","deprecated":null},{"type":"class","name":"FwIsoIt","ctype":"HinokoFwIsoIt","summary":"An object to transmit isochronous packet for single channel. [class@FwIsoIt] transmits isochronous packets for single channel by IT context ...","deprecated":null},{"type":"class","name":"FwIsoResourceAuto","ctype":"HinokoFwIsoResourceAuto","summary":"An object to maintain allocated isochronous resource. [class@FwIsoResourceAuto]is an object to maintain isochronous resource during the lifetime of the ...","deprecated":null},{"type":"class","name":"FwIsoResourceOnce","ctype":"HinokoFwIsoResourceOnce","summary":"An object to initiate requests and listen events of isochronous resource allocation/deallocation by one shot. The [class@FwIsoResourceOnce] is an ...","deprecated":null},{"type":"content","name":"Overview","href":"overview.html","summary":" The library produces some objects derived from [class@GObject.Object] as an abstraction to operate system resources in Linux FireWire ..."},{"type":"ctor","name":"new","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_new","summary":"Instantiate [class@FwIsoIrMultiple] object and return the instance.","deprecated":null},{"type":"ctor","name":"new","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_new","summary":"Instantiate [class@FwIsoIrSingle] object and return the instance.","deprecated":null},{"type":"ctor","name":"new","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_new","summary":"Instantiate [class@FwIsoIt] object and return the instance.","deprecated":null},{"type":"ctor","name":"new","type_name":"FwIsoResourceAuto","ident":"hinoko_fw_iso_resource_auto_new","summary":"Allocate and return an instance of [class@FwIsoResourceAuto]object.","deprecated":null},{"type":"ctor","name":"new","type_name":"FwIsoResourceOnce","ident":"hinoko_fw_iso_resource_once_new","summary":"Allocate and return an instance of [class@FwIsoResourceOnce].","deprecated":null},{"type":"domain","name":"FwIsoCtxError","ctype":"HinokoFwIsoCtxError","summary":"A set of error code for operations in [iface@FwIsoCtx].","deprecated":null},{"type":"domain","name":"FwIsoResourceAutoError","ctype":"HinokoFwIsoResourceAutoError","summary":"A set of error code for operations in [class@FwIsoResourceAuto].","deprecated":null},{"type":"domain","name":"FwIsoResourceError","ctype":"HinokoFwIsoResourceError","summary":"A set of error code for operations in [iface@FwIsoResource].","deprecated":null},{"type":"enum","name":"FwIsoCtxMode","ctype":"HinokoFwIsoCtxMode","summary":"A set of mode for isochronous context of Linux FireWire subsystem.","deprecated":null},{"type":"enum","name":"FwScode","ctype":"HinokoFwScode","summary":"A set of speed for isochronous context on IEEE 1394 bus.","deprecated":null},{"type":"interface","name":"FwIsoCtx","ctype":"HinokoFwIsoCtx","summary":"A set of basic interfaces to operate isochronous context on 1394 OHCI hardware. [iface@FwIsoCtx] includes interfaces to operate 1394 ...","deprecated":null},{"type":"interface","name":"FwIsoResource","ctype":"HinokoFwIsoResource","summary":"A set of basic interfaces to listen to events about isochronous resource. [iface@FwIsoResource] includes interfaces to listen to events ...","deprecated":null},{"type":"method","name":"allocate","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_allocate","summary":"Allocate an IR context to 1394 OHCI hardware for buffer-fill mode. A local node of the node corresponding to ...","deprecated":null},{"type":"method","name":"allocate","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_allocate","summary":"Allocate an IR context to 1394 OHCI hardware for packet-per-buffer mode. A local node of the node corresponding to ...","deprecated":null},{"type":"method","name":"allocate","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_allocate","summary":"Allocate an IT context to 1394 OHCI hardware. A local node of the node corresponding to the given path ...","deprecated":null},{"type":"method","name":"allocate","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_allocate","summary":"Initiate allocation of isochronous resource without any wait. One of the candidates is actually allocated for channel. When the ...","deprecated":null},{"type":"method","name":"allocate_wait","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_allocate_wait","summary":"Initiate allocation of isochronous resource and wait for [signal@FwIsoResource::allocated] signal. One of the candidates is actually allocated for channel.","deprecated":null},{"type":"method","name":"create_source","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_create_source","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous context.","deprecated":null},{"type":"method","name":"create_source","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_create_source","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous resource.","deprecated":null},{"type":"method","name":"deallocate","type_name":"FwIsoResourceAuto","ident":"hinoko_fw_iso_resource_auto_deallocate","summary":"Initiate deallocation of isochronous resource. When the deallocation is done, [signal@FwIsoResource::deallocated] signal is emit to notify the result, channel, ...","deprecated":null},{"type":"method","name":"deallocate","type_name":"FwIsoResourceOnce","ident":"hinoko_fw_iso_resource_once_deallocate","summary":"Initiate deallocation of isochronous resource without any wait. When the deallocation finishes, [signal@FwIsoResource::deallocated] signal is emit to notify the ...","deprecated":null},{"type":"method","name":"deallocate_wait","type_name":"FwIsoResourceAuto","ident":"hinoko_fw_iso_resource_auto_deallocate_wait","summary":"Initiate deallocation of isochronous resource. When the deallocation is done, [signal@FwIsoResource::deallocated] signal is emit to notify the result, channel, ...","deprecated":null},{"type":"method","name":"deallocate_wait","type_name":"FwIsoResourceOnce","ident":"hinoko_fw_iso_resource_once_deallocate_wait","summary":"Initiate deallocation of isochronous resource and wait for [signal@FwIsoResource::deallocated] signal.","deprecated":null},{"type":"method","name":"flush_completions","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_flush_completions","summary":"Flush isochronous context until recent isochronous cycle. The call of function forces the context to queue any type of ...","deprecated":null},{"type":"method","name":"get_payload","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_get_payload","summary":"Retrieve data for packet indicated by the index parameter. The data has isochronous packet header in its first quadlet, ...","deprecated":null},{"type":"method","name":"get_payload","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_get_payload","summary":"Retrieve payload of IR context for a handled packet corresponding to index at the event of interrupt.","deprecated":null},{"type":"method","name":"map_buffer","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_map_buffer","summary":"Map an intermediate buffer to share payload of IR context with 1394 OHCI hardware.","deprecated":null},{"type":"method","name":"map_buffer","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_map_buffer","summary":"Map intermediate buffer to share payload of IR context with 1394 OHCI hardware.","deprecated":null},{"type":"method","name":"map_buffer","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_map_buffer","summary":"Map intermediate buffer to share payload of IT context with 1394 OHCI hardware.","deprecated":null},{"type":"method","name":"open","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_open","summary":"Open Linux FireWire character device to delegate any request for isochronous resource management to Linux FireWire subsystem.","deprecated":null},{"type":"method","name":"read_cycle_time","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_read_cycle_time","summary":"Retrieve the value of cycle time register. This method call is available once any isochronous context is created.","deprecated":null},{"type":"method","name":"register_packet","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_register_packet","summary":"Register chunk of buffer to process packet for future isochronous cycle. The caller can schedule hardware interrupt to generate ...","deprecated":null},{"type":"method","name":"register_packet","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_register_packet","summary":"Register packet data with header and payload for IT context. The content of given header and payload is appended ...","deprecated":null},{"type":"method","name":"release","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_release","summary":"Release the context from 1394 OHCI hardware.","deprecated":null},{"type":"method","name":"start","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_start","summary":"Start IR context.","deprecated":null},{"type":"method","name":"start","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_start","summary":"Start IR context.","deprecated":null},{"type":"method","name":"start","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_start","summary":"Start IT context.","deprecated":null},{"type":"method","name":"stop","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_stop","summary":"Stop isochronous context.","deprecated":null},{"type":"method","name":"unmap_buffer","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_unmap_buffer","summary":"Unmap intermediate buffer shared with 1394 OHCI hardware for the context.","deprecated":null},{"type":"property","name":"bandwidth","type_name":"FwIsoResourceAuto","summary":"The allocated amount of bandwidth.","deprecated":null},{"type":"property","name":"bytes-per-chunk","type_name":"FwIsoCtx","summary":"The number of bytes per chunk in buffer.","deprecated":null},{"type":"property","name":"channel","type_name":"FwIsoResourceAuto","summary":"The allocated channel number.","deprecated":null},{"type":"property","name":"channels","type_name":"FwIsoIrMultiple","summary":"The array with elements to express isochronous channels to be listened to.","deprecated":null},{"type":"property","name":"chunks-per-buffer","type_name":"FwIsoCtx","summary":"The number of chunks per buffer.","deprecated":null},{"type":"property","name":"generation","type_name":"FwIsoResource","summary":"No description available.","deprecated":null},{"type":"property","name":"is-allocated","type_name":"FwIsoResourceAuto","summary":"Whether to be allocate isochronous resource or not.","deprecated":null},{"type":"signal","name":"allocated","type_name":"FwIsoResource","summary":"Emitted when allocation of isochronous resource finishes.","deprecated":null},{"type":"signal","name":"deallocated","type_name":"FwIsoResource","summary":"Emitted when deallocation of isochronous resource finishes.","deprecated":null},{"type":"signal","name":"interrupted","type_name":"FwIsoIrMultiple","summary":"Emitted when Linux FireWire subsystem generates interrupt event. There are two cases for Linux FireWire subsystem to generate the ...","deprecated":null},{"type":"signal","name":"interrupted","type_name":"FwIsoIrSingle","summary":"Emitted when Linux FireWire subsystem generates interrupt event. There are three cases for Linux FireWire subsystem to generate the ...","deprecated":null},{"type":"signal","name":"interrupted","type_name":"FwIsoIt","summary":"Emitted when Linux FireWire subsystem generates interrupt event. There are three cases for Linux FireWire subsystem to generate the ...","deprecated":null},{"type":"signal","name":"stopped","type_name":"FwIsoCtx","summary":"Emitted when isochronous context is stopped.","deprecated":null},{"type":"type_func","name":"calculate_bandwidth","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_calculate_bandwidth","summary":"Calculate the amount of bandwidth expected to be consumed in allocation unit by given parameters.","deprecated":null},{"type":"type_func","name":"quark","type_name":"FwIsoCtxError","ident":"hinoko_fw_iso_ctx_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] which has code in [error@FwIsoCtxError].","deprecated":null},{"type":"type_func","name":"quark","type_name":"FwIsoResourceAutoError","ident":"hinoko_fw_iso_resource_auto_error_quark","summary":"Return the [alias@GLib.Quark] for error domain of [struct@GLib.Error] which has code in [error@FwIsoResourceAutoError].","deprecated":null},{"type":"type_func","name":"quark","type_name":"FwIsoResourceError","ident":"hinoko_fw_iso_resource_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with which has code in [error@FwIsoResourceError].","deprecated":null},{"type":"vfunc","name":"allocate","type_name":"FwIsoResource","summary":"Initiate allocation of isochronous resource without any wait. One of the candidates is actually allocated for channel. When the ...","deprecated":null},{"type":"vfunc","name":"allocated","type_name":"FwIsoResource","summary":"Closure for the [signal@FwIsoResource::allocated] signal.","deprecated":null},{"type":"vfunc","name":"create_source","type_name":"FwIsoCtx","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous context.","deprecated":null},{"type":"vfunc","name":"create_source","type_name":"FwIsoResource","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous resource.","deprecated":null},{"type":"vfunc","name":"deallocated","type_name":"FwIsoResource","summary":"Closure for the [signal@FwIsoResource::deallocated] signal.","deprecated":null},{"type":"vfunc","name":"flush_completions","type_name":"FwIsoCtx","summary":"Flush isochronous context until recent isochronous cycle. The call of function forces the context to queue any type of ...","deprecated":null},{"type":"vfunc","name":"interrupted","type_name":"FwIsoIrMultiple","summary":"Class closure for the [signal@FwIsoIrMultiple::interrupted].","deprecated":null},{"type":"vfunc","name":"interrupted","type_name":"FwIsoIrSingle","summary":"Class closure for the [signal@FwIsoIrSingle::interrupted] signal.","deprecated":null},{"type":"vfunc","name":"interrupted","type_name":"FwIsoIt","summary":"Class closure for the [signal@FwIsoIt::interrupted] signal.","deprecated":null},{"type":"vfunc","name":"open","type_name":"FwIsoResource","summary":"Open Linux FireWire character device to delegate any request for isochronous resource management to Linux FireWire subsystem.","deprecated":null},{"type":"vfunc","name":"read_cycle_time","type_name":"FwIsoCtx","summary":"Retrieve the value of cycle time register. This method call is available once any isochronous context is created.","deprecated":null},{"type":"vfunc","name":"release","type_name":"FwIsoCtx","summary":"Release the context from 1394 OHCI hardware.","deprecated":null},{"type":"vfunc","name":"stop","type_name":"FwIsoCtx","summary":"Stop isochronous context.","deprecated":null},{"type":"vfunc","name":"stopped","type_name":"FwIsoCtx","summary":"Closure for the [signal@FwIsoCtx::stopped] signal.","deprecated":null},{"type":"vfunc","name":"unmap_buffer","type_name":"FwIsoCtx","summary":"Unmap intermediate buffer shared with 1394 OHCI hardware for the context.","deprecated":null}],"terms":{}}