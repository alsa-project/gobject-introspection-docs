{"meta":{"ns":"Hinoko","version":"0.0","generator":"gi-docgen","generator-version":"2023.1"},"symbols":[{"type":"bitfield","name":"FwIsoCtxMatchFlag","ctype":"HinokoFwIsoCtxMatchFlag","summary":"A set of tag field of isochronous packet on ..."},{"type":"class","name":"FwIsoIrMultiple","ctype":"HinokoFwIsoIrMultiple","summary":"An object to receive isochronous packet for several channels. ..."},{"type":"class","name":"FwIsoIrSingle","ctype":"HinokoFwIsoIrSingle","summary":"An object to receive isochronous packet for single channel. ..."},{"type":"class","name":"FwIsoIt","ctype":"HinokoFwIsoIt","summary":"An object to transmit isochronous packet for single channel. ..."},{"type":"class","name":"FwIsoResourceAuto","ctype":"HinokoFwIsoResourceAuto","summary":"An object to maintain allocated isochronous resource. A [class@FwIsoResourceAuto]is ..."},{"type":"class","name":"FwIsoResourceOnce","ctype":"HinokoFwIsoResourceOnce","summary":"An object to initiate requests and listen events of ..."},{"type":"content","name":"Overview","href":"overview.html","summary":" The library produces some objects derived from [class@GObject.Object] ..."},{"type":"ctor","name":"new","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_new","summary":"Instantiate [class@FwIsoIrMultiple] object and return the instance."},{"type":"ctor","name":"new","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_new","summary":"Instantiate [class@FwIsoIrSingle] object and return the instance."},{"type":"ctor","name":"new","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_new","summary":"Instantiate [class@FwIsoIt] object and return the instance."},{"type":"ctor","name":"new","type_name":"FwIsoResourceAuto","ident":"hinoko_fw_iso_resource_auto_new","summary":"Allocate and return an instance of [class@FwIsoResourceAuto]object."},{"type":"ctor","name":"new","type_name":"FwIsoResourceOnce","ident":"hinoko_fw_iso_resource_once_new","summary":"Allocate and return an instance of [class@FwIsoResourceOnce]."},{"type":"domain","name":"FwIsoCtxError","ctype":"HinokoFwIsoCtxError","summary":"A set of error code for [iface@FwIsoCtx]."},{"type":"domain","name":"FwIsoResourceAutoError","ctype":"HinokoFwIsoResourceAutoError","summary":"A set of error code for [class@FwIsoResourceAuto]."},{"type":"domain","name":"FwIsoResourceError","ctype":"HinokoFwIsoResourceError","summary":"A set of error code for [iface@FwIsoResource]."},{"type":"enum","name":"FwIsoCtxMode","ctype":"HinokoFwIsoCtxMode","summary":"A set of mode for isochronous context of Linux ..."},{"type":"enum","name":"FwScode","ctype":"HinokoFwScode","summary":"A set of speed for isochronous context on IEEE ..."},{"type":"interface","name":"FwIsoCtx","ctype":"HinokoFwIsoCtx","summary":"An basic interface to operate isochronous context on 1394 ..."},{"type":"interface","name":"FwIsoResource","ctype":"HinokoFwIsoResource","summary":"An interface object to listen events of isochronous resource ..."},{"type":"method","name":"allocate","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_allocate","summary":"Allocate an IR context to 1394 OHCI controller for ..."},{"type":"method","name":"allocate","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_allocate","summary":"Allocate an IR context to 1394 OHCI controller for ..."},{"type":"method","name":"allocate","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_allocate","summary":"Allocate an IT context to 1394 OHCI controller. A ..."},{"type":"method","name":"allocate_async","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_allocate_async","summary":"Initiate allocation of isochronous resource without any wait. One ..."},{"type":"method","name":"allocate_sync","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_allocate_sync","summary":"Initiate allocation of isochronous resource and wait for [signal@FwIsoResource::allocated] ..."},{"type":"method","name":"create_source","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_create_source","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous context."},{"type":"method","name":"create_source","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_create_source","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous resource."},{"type":"method","name":"deallocate_async","type_name":"FwIsoResourceAuto","ident":"hinoko_fw_iso_resource_auto_deallocate_async","summary":"Initiate deallocation of isochronous resource. When the deallocation is ..."},{"type":"method","name":"deallocate_async","type_name":"FwIsoResourceOnce","ident":"hinoko_fw_iso_resource_once_deallocate_async","summary":"Initiate deallocation of isochronous resource without any wait. When ..."},{"type":"method","name":"deallocate_sync","type_name":"FwIsoResourceAuto","ident":"hinoko_fw_iso_resource_auto_deallocate_sync","summary":"Initiate deallocation of isochronous resource. When the deallocation is ..."},{"type":"method","name":"deallocate_sync","type_name":"FwIsoResourceOnce","ident":"hinoko_fw_iso_resource_once_deallocate_sync","summary":"Initiate deallocation of isochronous resource and wait for [signal@FwIsoResource::deallocated] signal."},{"type":"method","name":"flush_completions","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_flush_completions","summary":"Flush isochronous context until recent isochronous cycle. The call ..."},{"type":"method","name":"get_payload","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_get_payload","summary":"Retrieve data for packet indicated by the index parameter. ..."},{"type":"method","name":"get_payload","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_get_payload","summary":"Retrieve payload of IR context for a handled packet ..."},{"type":"method","name":"map_buffer","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_map_buffer","summary":"Map an intermediate buffer to share payload of IR ..."},{"type":"method","name":"map_buffer","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_map_buffer","summary":"Map intermediate buffer to share payload of IR context ..."},{"type":"method","name":"map_buffer","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_map_buffer","summary":"Map intermediate buffer to share payload of IT context ..."},{"type":"method","name":"open","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_open","summary":"Open Linux FireWire character device to delegate any request ..."},{"type":"method","name":"read_cycle_time","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_read_cycle_time","summary":"Retrieve the value of cycle time register. This method ..."},{"type":"method","name":"register_packet","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_register_packet","summary":"Register chunk of buffer to process packet for future ..."},{"type":"method","name":"register_packet","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_register_packet","summary":"Register packet data with header and payload for IT ..."},{"type":"method","name":"release","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_release","summary":"Release the contest from 1394 OHCI controller."},{"type":"method","name":"start","type_name":"FwIsoIrMultiple","ident":"hinoko_fw_iso_ir_multiple_start","summary":"Start IR context."},{"type":"method","name":"start","type_name":"FwIsoIrSingle","ident":"hinoko_fw_iso_ir_single_start","summary":"Start IR context."},{"type":"method","name":"start","type_name":"FwIsoIt","ident":"hinoko_fw_iso_it_start","summary":"Start IT context."},{"type":"method","name":"stop","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_stop","summary":"Stop isochronous context."},{"type":"method","name":"unmap_buffer","type_name":"FwIsoCtx","ident":"hinoko_fw_iso_ctx_unmap_buffer","summary":"Unmap intermediate buffer shared with 1394 OHCI controller for ..."},{"type":"property","name":"bandwidth","type_name":"FwIsoResourceAuto","summary":"The allocated amount of bandwidth."},{"type":"property","name":"bytes-per-chunk","type_name":"FwIsoCtx","summary":"The number of bytes per chunk in buffer."},{"type":"property","name":"channel","type_name":"FwIsoResourceAuto","summary":"The allocated channel number."},{"type":"property","name":"channels","type_name":"FwIsoIrMultiple","summary":"The array with elements to express isochronous channels to ..."},{"type":"property","name":"chunks-per-buffer","type_name":"FwIsoCtx","summary":"The number of chunks per buffer."},{"type":"property","name":"generation","type_name":"FwIsoResource","summary":"No description available."},{"type":"property","name":"is-allocated","type_name":"FwIsoResourceAuto","summary":"Whether to be allocate isochronous resource or not."},{"type":"signal","name":"allocated","type_name":"FwIsoResource","summary":"Emitted when allocation of isochronous resource finishes."},{"type":"signal","name":"deallocated","type_name":"FwIsoResource","summary":"Emitted when deallocation of isochronous resource finishes."},{"type":"signal","name":"interrupted","type_name":"FwIsoIrMultiple","summary":"Emitted when Linux FireWire subsystem generates interrupt event. There ..."},{"type":"signal","name":"interrupted","type_name":"FwIsoIrSingle","summary":"Emitted when Linux FireWire subsystem generates interrupt event. There ..."},{"type":"signal","name":"interrupted","type_name":"FwIsoIt","summary":"Emitted when Linux FireWire subsystem generates interrupt event. There ..."},{"type":"signal","name":"stopped","type_name":"FwIsoCtx","summary":"Emitted when isochronous context is stopped."},{"type":"type_func","name":"calculate_bandwidth","type_name":"FwIsoResource","ident":"hinoko_fw_iso_resource_calculate_bandwidth","summary":"Calculate the amount of bandwidth expected to be consumed ..."},{"type":"type_func","name":"quark","type_name":"FwIsoCtxError","ident":"hinoko_fw_iso_ctx_error_quark","summary":"Return the [alias@GLib.Quark] for error domain of [struct@GLib.Error] which ..."},{"type":"type_func","name":"quark","type_name":"FwIsoResourceAutoError","ident":"hinoko_fw_iso_resource_auto_error_quark","summary":"Return the [alias@GLib.Quark] for error domain of [struct@GLib.Error] which ..."},{"type":"type_func","name":"quark","type_name":"FwIsoResourceError","ident":"hinoko_fw_iso_resource_error_quark","summary":"Return the [alias@GLib.Quark] for error domain of [struct@GLib.Error] which ..."},{"type":"vfunc","name":"allocate_async","type_name":"FwIsoResource","summary":"Initiate allocation of isochronous resource without any wait. One ..."},{"type":"vfunc","name":"allocated","type_name":"FwIsoResource","summary":"Closure for the [signal@FwIsoResource::allocated] signal."},{"type":"vfunc","name":"create_source","type_name":"FwIsoCtx","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous context."},{"type":"vfunc","name":"create_source","type_name":"FwIsoResource","summary":"Create [struct@GLib.Source] for [struct@GLib.MainContext] to dispatch events for isochronous resource."},{"type":"vfunc","name":"deallocated","type_name":"FwIsoResource","summary":"Closure for the [signal@FwIsoResource::deallocated] signal."},{"type":"vfunc","name":"flush_completions","type_name":"FwIsoCtx","summary":"Flush isochronous context until recent isochronous cycle. The call ..."},{"type":"vfunc","name":"interrupted","type_name":"FwIsoIrMultiple","summary":"Class closure for the [signal@FwIsoIrMultiple::interrupted]."},{"type":"vfunc","name":"interrupted","type_name":"FwIsoIrSingle","summary":"Class closure for the [signal@FwIsoIrSingle::interrupted] signal."},{"type":"vfunc","name":"interrupted","type_name":"FwIsoIt","summary":"Class closure for the [signal@FwIsoIt::interrupted] signal."},{"type":"vfunc","name":"open","type_name":"FwIsoResource","summary":"Open Linux FireWire character device to delegate any request ..."},{"type":"vfunc","name":"read_cycle_time","type_name":"FwIsoCtx","summary":"Retrieve the value of cycle time register. This method ..."},{"type":"vfunc","name":"release","type_name":"FwIsoCtx","summary":"Release the contest from 1394 OHCI controller."},{"type":"vfunc","name":"stop","type_name":"FwIsoCtx","summary":"Stop isochronous context."},{"type":"vfunc","name":"stopped","type_name":"FwIsoCtx","summary":"Closure for the [signal@FwIsoCtx::stopped] signal."},{"type":"vfunc","name":"unmap_buffer","type_name":"FwIsoCtx","summary":"Unmap intermediate buffer shared with 1394 OHCI controller for ..."}],"terms":{}}