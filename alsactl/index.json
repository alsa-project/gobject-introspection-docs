{"meta":{"ns":"ALSACtl","version":"0.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"bitfield","name":"ElemAccessFlag","ctype":"ALSACtlElemAccessFlag","summary":"A set of flags for access information of the element."},{"type":"bitfield","name":"ElemEventMask","ctype":"ALSACtlElemEventMask","summary":"A set of flags for the content of event ..."},{"type":"class","name":"Card","ctype":"ALSACtlCard","summary":"An GObject-derived object to express sound card. A [class@Card] ..."},{"type":"class","name":"CardInfo","ctype":"ALSACtlCardInfo","summary":"A GObject-derived object to express information of sound card. ..."},{"type":"class","name":"ElemInfoBoolean","ctype":"ALSACtlElemInfoBoolean","summary":"An object to express information for boolean type of ..."},{"type":"class","name":"ElemInfoBytes","ctype":"ALSACtlElemInfoBytes","summary":"An object to express information for bytes type of ..."},{"type":"class","name":"ElemInfoEnumerated","ctype":"ALSACtlElemInfoEnumerated","summary":"An object to express information for enumerated type of ..."},{"type":"class","name":"ElemInfoIec60958","ctype":"ALSACtlElemInfoIec60958","summary":"An object to express information for iec60958 type of ..."},{"type":"class","name":"ElemInfoInteger","ctype":"ALSACtlElemInfoInteger","summary":"An object to express information for integer type of ..."},{"type":"class","name":"ElemInfoInteger64","ctype":"ALSACtlElemInfoInteger64","summary":"An object to express information for integer64 type of ..."},{"type":"class","name":"ElemValue","ctype":"ALSACtlElemValue","summary":"A GObject-derived object to express the container of array ..."},{"type":"content","name":"Overview","href":"overview.html","summary":" This library is designed for applications to manipulate ..."},{"type":"ctor","name":"new","type_name":"Card","ident":"alsactl_card_new","summary":"Allocate and return an instance of [class@Card]."},{"type":"ctor","name":"new","type_name":"ElemInfoBoolean","ident":"alsactl_elem_info_boolean_new","summary":"Allocate and return an instance of [class@ElemInfoBoolean]."},{"type":"ctor","name":"new","type_name":"ElemInfoBytes","ident":"alsactl_elem_info_bytes_new","summary":"Allocate and return an instance of [class@ElemInfoBytes]."},{"type":"ctor","name":"new","type_name":"ElemInfoEnumerated","ident":"alsactl_elem_info_enumerated_new","summary":"Allocate and return an instance of [class@ElemInfoEnumerated]."},{"type":"ctor","name":"new","type_name":"ElemInfoIec60958","ident":"alsactl_elem_info_iec60958_new","summary":"Allocate and return an instance of [class@ElemInfoIec60958]."},{"type":"ctor","name":"new","type_name":"ElemInfoInteger","ident":"alsactl_elem_info_integer_new","summary":"Allocate and return an instance of [class@ElemInfoInteger]."},{"type":"ctor","name":"new","type_name":"ElemInfoInteger64","ident":"alsactl_elem_info_integer64_new","summary":"Allocate and return an instance of [class@ElemInfoInteger64]."},{"type":"ctor","name":"new","type_name":"ElemValue","ident":"alsactl_elem_value_new","summary":"Allocate and return an instance of [class@ElemValue]."},{"type":"ctor","name":"new_by_name","type_name":"ElemId","ident":"alsactl_elem_id_new_by_name","summary":"Allocates and return an instance of [struct@ElemId] by the name."},{"type":"ctor","name":"new_by_numid","type_name":"ElemId","ident":"alsactl_elem_id_new_by_numid","summary":"Allocates and return an instance of [struct@ElemId] by the ..."},{"type":"domain","name":"CardError","ctype":"ALSACtlCardError","summary":"A set of error code for [struct@GLib.Error] with `ALSACtl.CardError` domain."},{"type":"enum","name":"ElemIfaceType","ctype":"ALSACtlElemIfaceType","summary":"A set of enumerations for interface of element."},{"type":"enum","name":"ElemType","ctype":"ALSACtlElemType","summary":"A set of enumerations for type of element."},{"type":"enum","name":"EventType","ctype":"ALSACtlEventType","summary":"A set of enumerations for the type of event."},{"type":"function","name":"get_card_id_list","ident":"alsactl_get_card_id_list","summary":"Get the list of numeric ID for available sound ..."},{"type":"function","name":"get_card_sysname","ident":"alsactl_get_card_sysname","summary":"Allocate sysname for the sound card and return it ..."},{"type":"function","name":"get_control_devnode","ident":"alsactl_get_control_devnode","summary":"Allocate string of devnode for control device of the ..."},{"type":"function","name":"get_control_sysname","ident":"alsactl_get_control_sysname","summary":"Allocate sysname of control device for the sound card ..."},{"type":"function","name":"sigs_marshal_VOID__BOXED_FLAGS","ident":"alsactl_sigs_marshal_VOID__BOXED_FLAGS","summary":"No description available."},{"type":"interface","name":"ElemInfoCommon","ctype":"ALSACtlElemInfoCommon","summary":"An interface to express common features of element information. ..."},{"type":"interface","name":"ElemInfoSingleArray","ctype":"ALSACtlElemInfoSingleArray","summary":"An interface to express information of element which has ..."},{"type":"method","name":"add_elems","type_name":"Card","ident":"alsactl_card_add_elems","summary":"Add the user-defined elements and return the list of ..."},{"type":"method","name":"command_elem_tlv","type_name":"Card","ident":"alsactl_card_command_elem_tlv","summary":"Command the given array of bytes as Type/Length/Value data ..."},{"type":"method","name":"create_source","type_name":"Card","ident":"alsactl_card_create_source","summary":"Allocate [struct@GLib.Source] structure to handle events from ALSA control ..."},{"type":"method","name":"equal","type_name":"ElemValue","ident":"alsactl_elem_value_equal","summary":"No description available."},{"type":"method","name":"equal","type_name":"ElemId","ident":"alsactl_elem_id_equal","summary":"No description available."},{"type":"method","name":"get_bool","type_name":"ElemValue","ident":"alsactl_elem_value_get_bool","summary":"Refer to the array specific to [enum@ElemType].BOOLEAN element in ..."},{"type":"method","name":"get_bytes","type_name":"ElemValue","ident":"alsactl_elem_value_get_bytes","summary":"Refer to the array specific to [enum@ElemType].BYTES element in ..."},{"type":"method","name":"get_device_id","type_name":"ElemId","ident":"alsactl_elem_id_get_device_id","summary":"Get the numeric identifier of device to which the ..."},{"type":"method","name":"get_elem_id_list","type_name":"Card","ident":"alsactl_card_get_elem_id_list","summary":"Generate a list of [struct@ElemId] for ALSA control character ..."},{"type":"method","name":"get_elem_info","type_name":"Card","ident":"alsactl_card_get_elem_info","summary":"Get information of element corresponding to given id.  ..."},{"type":"method","name":"get_enum","type_name":"ElemValue","ident":"alsactl_elem_value_get_enum","summary":"Refer to the array specific to [enum@ElemType].ENUMERATED element in ..."},{"type":"method","name":"get_iec60958_channel_status","type_name":"ElemValue","ident":"alsactl_elem_value_get_iec60958_channel_status","summary":"Refer to the array specific to [enum@ElemType].IEC60958 element in ..."},{"type":"method","name":"get_iec60958_user_data","type_name":"ElemValue","ident":"alsactl_elem_value_get_iec60958_user_data","summary":"Refer to the array specific to [enum@ElemType].IEC60958 element in ..."},{"type":"method","name":"get_iface","type_name":"ElemId","ident":"alsactl_elem_id_get_iface","summary":"Get the interface of element."},{"type":"method","name":"get_index","type_name":"ElemId","ident":"alsactl_elem_id_get_index","summary":"Get the index of element."},{"type":"method","name":"get_info","type_name":"Card","ident":"alsactl_card_get_info","summary":"Get the information of sound card.  The call ..."},{"type":"method","name":"get_int","type_name":"ElemValue","ident":"alsactl_elem_value_get_int","summary":"Refer to the array for [enum@ElemType].INTEGER element in internal storage."},{"type":"method","name":"get_int64","type_name":"ElemValue","ident":"alsactl_elem_value_get_int64","summary":"Refer to the array for [enum@ElemType].INTEGER64 element in internal storage."},{"type":"method","name":"get_name","type_name":"ElemId","ident":"alsactl_elem_id_get_name","summary":"Get the name of element."},{"type":"method","name":"get_numid","type_name":"ElemId","ident":"alsactl_elem_id_get_numid","summary":"Get the numeric identifier of element."},{"type":"method","name":"get_protocol_version","type_name":"Card","ident":"alsactl_card_get_protocol_version","summary":"Get the version of control protocol currently used. The ..."},{"type":"method","name":"get_subdevice_id","type_name":"ElemId","ident":"alsactl_elem_id_get_subdevice_id","summary":"Get the numeric identifier of element."},{"type":"method","name":"lock_elem","type_name":"Card","ident":"alsactl_card_lock_elem","summary":"Lock/Unlock indicated element not to be written by the ..."},{"type":"method","name":"open","type_name":"Card","ident":"alsactl_card_open","summary":"Open ALSA control character device for the sound card. ..."},{"type":"method","name":"read_elem_tlv","type_name":"Card","ident":"alsactl_card_read_elem_tlv","summary":"Read Type/Length/Value data from element pointed by the identifier ..."},{"type":"method","name":"read_elem_value","type_name":"Card","ident":"alsactl_card_read_elem_value","summary":"Read given value from element indicated by the given ..."},{"type":"method","name":"remove_elems","type_name":"Card","ident":"alsactl_card_remove_elems","summary":"Remove user-defined elements pointed by the identifier.  The ..."},{"type":"method","name":"replace_elems","type_name":"Card","ident":"alsactl_card_replace_elems","summary":"Add user-defined elements to replace the existent ones.  ..."},{"type":"method","name":"set_bool","type_name":"ElemValue","ident":"alsactl_elem_value_set_bool","summary":"Copy the array into internal data for [enum@ElemType].BOOLEAN element."},{"type":"method","name":"set_bytes","type_name":"ElemValue","ident":"alsactl_elem_value_set_bytes","summary":"Copy the array into internal storage for [enum@ElemType].BYTES element."},{"type":"method","name":"set_enum","type_name":"ElemValue","ident":"alsactl_elem_value_set_enum","summary":"Copy the array into internal storage for [enum@ElemType].ENUMERATED element."},{"type":"method","name":"set_iec60958_channel_status","type_name":"ElemValue","ident":"alsactl_elem_value_set_iec60958_channel_status","summary":"Copy the channel status bits into internal storage for ..."},{"type":"method","name":"set_iec60958_user_data","type_name":"ElemValue","ident":"alsactl_elem_value_set_iec60958_user_data","summary":"Copy the user data bits into internal storage for ..."},{"type":"method","name":"set_int","type_name":"ElemValue","ident":"alsactl_elem_value_set_int","summary":"Copy the array into internal storage for [enum@ElemType].INTEGER element."},{"type":"method","name":"set_int64","type_name":"ElemValue","ident":"alsactl_elem_value_set_int64","summary":"Copy the array into internal storage for [enum@ElemType].INTEGER64 element."},{"type":"method","name":"write_elem_tlv","type_name":"Card","ident":"alsactl_card_write_elem_tlv","summary":"Write the given array of bytes as Type/Length/Value data ..."},{"type":"method","name":"write_elem_value","type_name":"Card","ident":"alsactl_card_write_elem_value","summary":"Write given value to element indicated by the given ..."},{"type":"property","name":"access","type_name":"ElemInfoCommon","summary":"The access permission for the element with [flags@ElemAccessFlag]."},{"type":"property","name":"card-id","type_name":"CardInfo","summary":"The numeric ID of sound card."},{"type":"property","name":"components","type_name":"CardInfo","summary":"The The string with space-separated components for the sound card.,"},{"type":"property","name":"devnode","type_name":"Card","summary":"The full path to special file of control character device."},{"type":"property","name":"driver","type_name":"CardInfo","summary":"The name of driver bound to the sound card."},{"type":"property","name":"elem-id","type_name":"ElemValue","summary":"The identifier of element."},{"type":"property","name":"elem-id","type_name":"ElemInfoCommon","summary":"The identifier of element."},{"type":"property","name":"elem-type","type_name":"ElemInfoCommon","summary":"The type of element, one of [enum@ElemType]."},{"type":"property","name":"id","type_name":"CardInfo","summary":"The string ID of sound card."},{"type":"property","name":"labels","type_name":"ElemInfoEnumerated","summary":"The list of indexed labels for the element. There ..."},{"type":"property","name":"long-name","type_name":"CardInfo","summary":"The long name of sound card."},{"type":"property","name":"mixer-name","type_name":"CardInfo","summary":"The name of mixer for the sound card."},{"type":"property","name":"name","type_name":"CardInfo","summary":"The name of sound card."},{"type":"property","name":"owner","type_name":"ElemInfoCommon","summary":"The value of PID for process to own the element."},{"type":"property","name":"subscribed","type_name":"Card","summary":"Whether to be subscribed for event."},{"type":"property","name":"value-count","type_name":"ElemInfoSingleArray","summary":"The count of elements in value array of the element."},{"type":"property","name":"value-max","type_name":"ElemInfoInteger","summary":"The maximum value of element in value array for ..."},{"type":"property","name":"value-max","type_name":"ElemInfoInteger64","summary":"The maximum value of element in value array for ..."},{"type":"property","name":"value-min","type_name":"ElemInfoInteger","summary":"The minimum value of element in value array for ..."},{"type":"property","name":"value-min","type_name":"ElemInfoInteger64","summary":"The minimum value of element in value array for ..."},{"type":"property","name":"value-step","type_name":"ElemInfoInteger","summary":"The step value of element in value array for ..."},{"type":"property","name":"value-step","type_name":"ElemInfoInteger64","summary":"The step value of element in value array for ..."},{"type":"record","name":"ElemId","ctype":"ALSACtlElemId","summary":"A boxed object to express the identifier of element. ..."},{"type":"signal","name":"handle-disconnection","type_name":"Card","summary":"Emitted when the sound card is not available anymore ..."},{"type":"signal","name":"handle-elem-event","type_name":"Card","summary":"Emitted when event occurs for any element."},{"type":"type_func","name":"quark","type_name":"CardError","ident":"alsactl_card_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in [enum@CardError] enumerations."},{"type":"vfunc","name":"handle_disconnection","type_name":"Card","summary":"Class closure for the [signal@Card::handle-disconnection] signal."},{"type":"vfunc","name":"handle_elem_event","type_name":"Card","summary":"Class closure for the [signal@Card::handle-elem-event] signal."}],"terms":{"":[4,5,7,8,9,11,12,13,14,15,16,17,18,25,33,35,37,39,40,42,47,52,75,76,77,78,79,87,98],"*":[39],"-":[39],"1024":[39],"16":[10],"60958":[73],"64":[39,73],"8":[10],"BOXED":[79],"FLAGS":[79],"VOID":[79],"[class@card]":[3],"[class@eleminfoboolean]":[34],"[class@eleminfobytes]":[36],"[class@eleminfoenumerated]":[38],"[class@eleminfoiec60958]":[41],"[class@eleminfointeger64]":[48],"[class@eleminfointeger]":[43],"[class@elemvalue]":[53],"[enum@elemtype]":[83],"[enum@elemtype].boolean":[55,62],"[enum@elemtype].byt":[56,63],"[enum@elemtype].enumer":[57,64],"[enum@elemtype].iec60958":[58,59,65,66],"[enum@elemtype].integ":[60,67],"[enum@elemtype].integer64":[61,68],"[flags@elemaccessflag]":[81],"[method@card.read_elem_value]":[52],"[struct@glib.maincontext]":[6],"`alsactl.carderror":[70],"`ioctl2":[4,5,7,8,9,11,13,14,15,16,17,18],"`open2":[12],"`poll2":[6],"`read2":[6],"`struct":[25,33,35,37,40,42,47,52,87],"abstract":[98],"access":[0,52,81],"accord":[6,52],"activ":[0],"add":[1,4,16],"addit":[1],"after":[2],"all":[8],"alloc":[3,6,34,36,38,41,43,48,53,76,77,78,88,89],"alreadi":[70],"alsa":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,98],"alsactl_card_add_elems":[4],"alsactl_card_command_elem_tlv":[5],"alsactl_card_create_source":[6],"alsactl_card_error_quark":[71],"alsactl_card_get_elem_id_list":[7],"alsactl_card_get_elem_info":[8],"alsactl_card_get_info":[9],"alsactl_card_get_protocol_version":[10],"alsactl_card_lock_elem":[11],"alsactl_card_new":[3],"alsactl_card_open":[12],"alsactl_card_read_elem_tlv":[13],"alsactl_card_read_elem_value":[14],"alsactl_card_remove_elems":[15],"alsactl_card_replace_elems":[16],"alsactl_card_write_elem_tlv":[17],"alsactl_card_write_elem_value":[18],"alsactl_elem_id_equal":[90],"alsactl_elem_id_get_device_id":[91],"alsactl_elem_id_get_iface":[92],"alsactl_elem_id_get_index":[93],"alsactl_elem_id_get_name":[94],"alsactl_elem_id_get_numid":[95],"alsactl_elem_id_get_subdevice_id":[96],"alsactl_elem_id_new_by_name":[88],"alsactl_elem_id_new_by_numid":[89],"alsactl_elem_info_boolean_new":[34],"alsactl_elem_info_bytes_new":[36],"alsactl_elem_info_enumerated_new":[38],"alsactl_elem_info_iec60958_new":[41],"alsactl_elem_info_integer64_new":[48],"alsactl_elem_info_integer_new":[43],"alsactl_elem_value_equal":[54],"alsactl_elem_value_get_bool":[55],"alsactl_elem_value_get_bytes":[56],"alsactl_elem_value_get_enum":[57],"alsactl_elem_value_get_iec60958_channel_status":[58],"alsactl_elem_value_get_iec60958_user_data":[59],"alsactl_elem_value_get_int":[60],"alsactl_elem_value_get_int64":[61],"alsactl_elem_value_new":[53],"alsactl_elem_value_set_bool":[62],"alsactl_elem_value_set_bytes":[63],"alsactl_elem_value_set_enum":[64],"alsactl_elem_value_set_iec60958_channel_status":[65],"alsactl_elem_value_set_iec60958_user_data":[66],"alsactl_elem_value_set_int":[67],"alsactl_elem_value_set_int64":[68],"alsactl_get_card_id_list":[75],"alsactl_get_card_sysname":[76],"alsactl_get_control_devnode":[77],"alsactl_get_control_sysname":[78],"alsactl_sigs_marshal_VOID__BOXED_FLAGS":[79],"alsactlcard":[2,98],"alsactlcarderror":[70],"alsactlcardinfo":[25],"alsactlelemaccessflag":[0],"alsactlelemeventmask":[1],"alsactlelemid":[87],"alsactlelemifacetype":[72],"alsactleleminfoboolean":[33],"alsactleleminfobytes":[35],"alsactleleminfocommon":[80],"alsactleleminfoenumerated":[37],"alsactleleminfoiec60958":[40],"alsactleleminfointeger":[42],"alsactleleminfointeger64":[47],"alsactleleminfosinglearray":[85],"alsactlelemtype":[73],"alsactlelemvalue":[52],"alsactleventtype":[74],"an":[2,3,25,33,34,35,36,37,38,40,41,42,43,47,48,53,80,85,88,89],"ani":[0,1,22,74,80],"anymor":[21],"applic":[0,2,52,98],"arrai":[5,10,13,17,44,45,46,49,50,51,52,55,56,57,58,59,60,61,62,63,64,67,68,85,86],"associ":[7,70],"avail":[21,54,75,79,90],"belong":[91],"bit":[10,65,66,73],"bool":[55,62],"boolean":[33,73],"bound":[28],"box":[87],"byte":[5,13,17,35,39,56,63,73],"bytes":[73],"call":[2,4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,25,52,70],"card":[2,7,9,12,21,25,26,28,29,30,31,32,70,72,75,76,77,78,98],"card.":[27],"chang":[0,1],"channel":[58,65],"charact":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,98],"class":[23,24,33,35,37,40,42,47],"closur":[23,24],"code":[70,71],"combin":[87],"command":[0,4,5,7,8,9,11,13,14,15,16,17,18],"common":[80],"compon":[27],"contain":[52],"content":[1],"control":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,70,77,78,98],"copi":[62,63,64,65,66,67,68],"correspond":[8],"count":[86],"creat":[6,98],"current":[10],"data":[0,1,5,13,17,59,62,66],"decid":[52],"deriv":[33,35,37,40,42,47],"descript":[54,79,90],"descriptor":[2,98],"design":[98],"destruct":[2],"devic":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,21,72,77,78,87,91,98],"devnod":[19,77],"disconnect":[21,23,70],"disconnected":[70],"dispatch":[6,98],"domain":[70],"driver":[0,21,28],"due":[21],"each":[6,10],"effect":[72],"elem":[0,1,4,5,7,8,11,13,14,15,16,17,18,22,24,33,35,37,40,42,47,52,69,72,73,74,80,82,83,85,87],"elem_exist":[70],"elem_not_found":[70],"elem_not_supported":[70],"elem_owned":[70],"element":[0,1,4,5,8,10,11,13,14,15,16,17,18,22,33,35,37,39,40,42,44,45,46,47,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,80,81,82,83,84,85,86,87,91,92,93,94,95,96,98],"emit":[21,22],"enum":[57,64],"enumer":[8,37,71,72,73,74],"enumerated":[73],"equal":[54,90],"error":[70],"event":[1,6,20,22,24,74,98],"execut":[4,5,6,7,8,9,11,12,13,14,15,16,17,18],"exist":[16,70,76,77,78],"express":[2,10,25,33,35,37,40,42,47,52,80,85,87,98],"fail":[70],"failed":[70],"featur":[80],"file":[2,19,98],"flag":[0,1],"found":[70],"from":[0,6,13,14],"fulfil":[13],"full":[19],"function":[2,4,5,7,8,9,11,12,13,14,15,16,17,18,98],"gather":[75,76,77,78],"gener":[7],"get":[0,7,8,9,10,55,56,57,58,59,60,61,75,76,77,78,91,92,93,94,95,96],"given":[5,8,13,14,17,18],"glib'":[98],"gmaincontext/gmainloop":[98],"go":[21],"gobject-deriv":[2,25,52],"gsourc":[98],"ha":[72,73,85],"handl":[6,21,22,23,24],"hold":[98],"hot":[21],"hwdep":[72],"id":[2,7,8,26,29,69,75,82,87,91,96],"identifi":[4,5,13,14,15,17,18,69,82,87,89,91,95,96],"iec":[73],"iec60958":[40,58,59,65,66,73],"ifac":[72,92],"implement":[80,85],"inactive":[0],"includ":[39,52],"independ":[0],"index":[39,87,93],"indic":[11,14,18],"info":[1,8,9,25,33,35,37,40,42,47,80,85],"inform":[0,1,8,9,25,33,35,37,40,42,47,75,76,77,78,80,85],"instanc":[2,3,25,34,36,38,41,43,48,53,70,88,89],"instead":[0],"int":[60,67],"int64":[61,68],"integ":[42,73],"integer":[73],"integer64":[47,73],"interfac":[72,80,85,87,92],"intern":[52,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"it":[0],"iter":[6],"kernel":[0],"label":[8,39,73],"length":[10,39],"librari":[98],"limit":[39],"linux":[25,33,35,37,40,42,47,52,87],"list":[4,7,39,75],"lock":[0,11],"lock/unlock":[11],"long":[30],"maintain":[0,2],"major":[10],"manipul":[2,98],"marshal":[79],"mask":[1],"max":[44,49],"maximum":[44,49],"micro":[10],"min":[45,50],"minimum":[45,50],"minor":[10],"mixer":[31,72],"mutabl":[0],"name":[28,30,31,32,87,88,94],"new":[3,34,36,38,41,43,48,53,88,89],"node":[75,76,77,78],"none":[73],"notifi":[1],"numer":[2,26,75,87,89,91,95,96],"numid":[89,95],"object":[2,21,25,33,35,37,40,42,47,52,87],"occur":[22],"on":[16,83],"open":[12],"oper":[0,70,98],"order":[10],"other":[11,70],"own":[0,70,84],"owner":[0,21,84],"paramet":[73],"path":[19],"pcm":[72],"permiss":[81],"pid":[84],"point":[5,13,15,17,87],"possibl":[21],"process":[0,11,70,84],"protocol":[10],"quark":[71],"quickli":[21],"rawmidi":[72],"read":[0,13,14],"refer":[55,56,57,58,59,60,61],"relat":[74],"releas":[21],"remov":[1,15],"remove":[1],"replac":[16],"result":[6],"retriev":[8],"return":[3,4,25,34,36,38,41,43,48,53,71,76,77,78,88,89],"same":[52],"sequenc":[72],"sequencer":[72],"set":[0,1,62,63,64,65,66,67,68,70,72,73,74],"sever":[7,8,52],"share":[52],"should":[21,39,52,80,85],"sig":[79],"signal":[6,23,24],"singl":[85],"snd_ctl_card_info":[25],"snd_ctl_elem_id":[87],"snd_ctl_elem_info":[33,35,37,40,42,47],"snd_ctl_elem_valu":[52],"sndrv_ctl_ioctl_card_info":[9],"sndrv_ctl_ioctl_elem_add":[4],"sndrv_ctl_ioctl_elem_info":[8],"sndrv_ctl_ioctl_elem_list":[7],"sndrv_ctl_ioctl_elem_lock":[11],"sndrv_ctl_ioctl_elem_read":[14],"sndrv_ctl_ioctl_elem_remov":[15],"sndrv_ctl_ioctl_elem_replac":[16],"sndrv_ctl_ioctl_elem_unlock":[11],"sndrv_ctl_ioctl_elem_writ":[18],"sndrv_ctl_ioctl_tlv_command":[5],"sndrv_ctl_ioctl_tlv_read":[13],"sndrv_ctl_ioctl_tlv_writ":[17],"sound":[2,7,9,12,21,25,26,27,28,29,30,31,32,33,35,37,40,42,47,52,72,75,76,77,78,87],"sourc":[6],"space-separ":[27],"special":[19],"specif":[0,52,55,56,57,58,59],"state":[0,70],"statu":[58,65],"step":[46,51],"storag":[52,55,56,57,58,59,60,61,63,64,65,66,67,68],"string":[27,29,77],"structur":[6],"subdevic":[87,96],"subscrib":[20],"subsystem":[25,33,35,37,40,42,47,52,75,76,77,78,87],"support":[0,70],"sysf":[75,76,77,78],"sysnam":[76,78],"system":[0,4,5,6,7,8,9,11,12,13,14,15,16,17,18,70],"termin":[39],"that":[39],"three":[10],"thu":[52],"till":[2],"time":[8],"timer":[72],"tlv":[1,5,13,17],"tlv_callback":[0],"tlv_command":[0],"tlv_read":[0],"tlv_write":[0],"total":[39],"two":[87],"type":[33,35,37,40,42,47,52,72,73,74,80,83,85,87],"type-length-valu":[0,1],"type/length/valu":[5,13,17],"uapi":[25,33,35,37,40,42,47,52,87],"unbind":[21],"under":[0,75,76,77,78],"unplug":[21],"unudentifi":[73],"us":[0,2,10,52,75,76,77,78],"user":[0,52,59,66],"user-defin":[4,15,16],"valu":[0,1,14,18,44,45,46,49,50,51,52,73,84,85,86],"value":[1],"version":[10],"volatile":[0],"wai":[87],"when":[21,22,52,76],"whether":[20],"which":[85,91],"whieh":[85],"whole":[72],"within":[39],"wrap":[25,33,35,37,40,42,47,52,87],"write":[0,17,18],"written":[11],"yet":[0]}}