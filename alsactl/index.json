{"meta":{"ns":"ALSACtl","version":"0.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"bitfield","name":"ElemAccessFlag","ctype":"ALSACtlElemAccessFlag","summary":"A set of flags for access information of the element."},{"type":"bitfield","name":"ElemEventMask","ctype":"ALSACtlElemEventMask","summary":"A set of flags for the content of event ..."},{"type":"class","name":"Card","ctype":"ALSACtlCard","summary":"An GObject-derived object to represent sound card. A [class@Card] ..."},{"type":"class","name":"CardInfo","ctype":"ALSACtlCardInfo","summary":"A GObject-derived object to represent information of sound card. ..."},{"type":"class","name":"ElemInfo","ctype":"ALSACtlElemInfo","summary":"An GObject-derived object to represent the information of any ..."},{"type":"class","name":"ElemValue","ctype":"ALSACtlElemValue","summary":"A boxed object to represent the container of array ..."},{"type":"content","name":"Overview","href":"overview.html","summary":" This library is designed for applications to manipulate ..."},{"type":"ctor","name":"new","type_name":"Card","ident":"alsactl_card_new","summary":"Allocate and return an instance of [class@Card]."},{"type":"ctor","name":"new","type_name":"ElemInfo","ident":"alsactl_elem_info_new","summary":"Allocate and return the instance of [class@ElemInfo]."},{"type":"ctor","name":"new","type_name":"ElemValue","ident":"alsactl_elem_value_new","summary":"Allocate and return an instance of [class@ElemValue]."},{"type":"ctor","name":"new_by_name","type_name":"ElemId","ident":"alsactl_elem_id_new_by_name","summary":"Allocates and return an instance of [struct@ElemId] by the name."},{"type":"ctor","name":"new_by_numid","type_name":"ElemId","ident":"alsactl_elem_id_new_by_numid","summary":"Allocates and return an instance of [struct@ElemId] by the ..."},{"type":"domain","name":"CardError","ctype":"ALSACtlCardError","summary":"A set of error code for [struct@GLib.Error] with `ALSACtl.CardError` domain."},{"type":"enum","name":"ElemIfaceType","ctype":"ALSACtlElemIfaceType","summary":"A set of enumerations for interface of element."},{"type":"enum","name":"ElemType","ctype":"ALSACtlElemType","summary":"A set of enumerations for type of element."},{"type":"enum","name":"EventType","ctype":"ALSACtlEventType","summary":"A set of enumerations for the type of event."},{"type":"function","name":"get_card_id_list","ident":"alsactl_get_card_id_list","summary":"Get the list of numeric ID for available sound ..."},{"type":"function","name":"get_card_sysname","ident":"alsactl_get_card_sysname","summary":"Allocate sysname for the sound card and return it ..."},{"type":"function","name":"get_control_devnode","ident":"alsactl_get_control_devnode","summary":"Allocate string of devnode for control device of the ..."},{"type":"function","name":"get_control_sysname","ident":"alsactl_get_control_sysname","summary":"Allocate sysname of control device for the sound card ..."},{"type":"function","name":"sigs_marshal_VOID__BOXED_FLAGS","ident":"alsactl_sigs_marshal_VOID__BOXED_FLAGS","summary":"No description available."},{"type":"method","name":"add_elems","type_name":"Card","ident":"alsactl_card_add_elems","summary":"Add the user-defined elements and return the list of ..."},{"type":"method","name":"command_elem_tlv","type_name":"Card","ident":"alsactl_card_command_elem_tlv","summary":"Command the given array of bytes as Type/Length/Value data ..."},{"type":"method","name":"create_source","type_name":"Card","ident":"alsactl_card_create_source","summary":"Allocate [struct@GLib.Source] structure to handle events from ALSA control ..."},{"type":"method","name":"equal","type_name":"ElemValue","ident":"alsactl_elem_value_equal","summary":"No description available."},{"type":"method","name":"equal","type_name":"ElemId","ident":"alsactl_elem_id_equal","summary":"No description available."},{"type":"method","name":"get_bool","type_name":"ElemValue","ident":"alsactl_elem_value_get_bool","summary":"Copy the array for values of boolean type from ..."},{"type":"method","name":"get_bytes","type_name":"ElemValue","ident":"alsactl_elem_value_get_bytes","summary":"Copy the array for values of bytes type into ..."},{"type":"method","name":"get_device_id","type_name":"ElemId","ident":"alsactl_elem_id_get_device_id","summary":"Get the numeric identifier of device to which the ..."},{"type":"method","name":"get_elem_id_list","type_name":"Card","ident":"alsactl_card_get_elem_id_list","summary":"Generate a list of [struct@ElemId] for ALSA control character ..."},{"type":"method","name":"get_elem_info","type_name":"Card","ident":"alsactl_card_get_elem_info","summary":"Get information of element corresponding to given id.  ..."},{"type":"method","name":"get_enum","type_name":"ElemValue","ident":"alsactl_elem_value_get_enum","summary":"Copy the array for values of enumeration index from ..."},{"type":"method","name":"get_enum_data","type_name":"ElemInfo","ident":"alsactl_elem_info_get_enum_data","summary":"Refer to the array with elements for the label ..."},{"type":"method","name":"get_iec60958_channel_status","type_name":"ElemValue","ident":"alsactl_elem_value_get_iec60958_channel_status","summary":"Copy channel status of IEC 60958 from internal storage."},{"type":"method","name":"get_iec60958_user_data","type_name":"ElemValue","ident":"alsactl_elem_value_get_iec60958_user_data","summary":"Copy user data of IEC 60958 from internal storage."},{"type":"method","name":"get_iface","type_name":"ElemId","ident":"alsactl_elem_id_get_iface","summary":"Get the interface of element."},{"type":"method","name":"get_index","type_name":"ElemId","ident":"alsactl_elem_id_get_index","summary":"Get the index of element."},{"type":"method","name":"get_info","type_name":"Card","ident":"alsactl_card_get_info","summary":"Get the information of sound card.  The call ..."},{"type":"method","name":"get_int","type_name":"ElemValue","ident":"alsactl_elem_value_get_int","summary":"Copy the array for values of integer type from ..."},{"type":"method","name":"get_int64","type_name":"ElemValue","ident":"alsactl_elem_value_get_int64","summary":"Copy the array for values of integer64 type from ..."},{"type":"method","name":"get_int64_data","type_name":"ElemInfo","ident":"alsactl_elem_info_get_int64_data","summary":"Refer to the array with elements for the data ..."},{"type":"method","name":"get_int_data","type_name":"ElemInfo","ident":"alsactl_elem_info_get_int_data","summary":"Refer to the array with elements for the data ..."},{"type":"method","name":"get_name","type_name":"ElemId","ident":"alsactl_elem_id_get_name","summary":"Get the name of element."},{"type":"method","name":"get_numid","type_name":"ElemId","ident":"alsactl_elem_id_get_numid","summary":"Get the numeric identifier of element."},{"type":"method","name":"get_protocol_version","type_name":"Card","ident":"alsactl_card_get_protocol_version","summary":"Get the version of control protocol currently used. The ..."},{"type":"method","name":"get_subdevice_id","type_name":"ElemId","ident":"alsactl_elem_id_get_subdevice_id","summary":"Get the numeric identifier of element."},{"type":"method","name":"lock_elem","type_name":"Card","ident":"alsactl_card_lock_elem","summary":"Lock/Unlock indicated element not to be written by the ..."},{"type":"method","name":"open","type_name":"Card","ident":"alsactl_card_open","summary":"Open ALSA control character device for the sound card. ..."},{"type":"method","name":"read_elem_tlv","type_name":"Card","ident":"alsactl_card_read_elem_tlv","summary":"Read Type/Length/Value data from element pointed by the identifier ..."},{"type":"method","name":"read_elem_value","type_name":"Card","ident":"alsactl_card_read_elem_value","summary":"Read given value from element indicated by the given ..."},{"type":"method","name":"remove_elems","type_name":"Card","ident":"alsactl_card_remove_elems","summary":"Remove user-defined elements pointed by the identifier.  The ..."},{"type":"method","name":"replace_elems","type_name":"Card","ident":"alsactl_card_replace_elems","summary":"Add user-defined elements to replace the existent ones.  ..."},{"type":"method","name":"set_bool","type_name":"ElemValue","ident":"alsactl_elem_value_set_bool","summary":"Copy the array for values of boolean type into ..."},{"type":"method","name":"set_bytes","type_name":"ElemValue","ident":"alsactl_elem_value_set_bytes","summary":"Copy the array for values of bytes type into ..."},{"type":"method","name":"set_enum","type_name":"ElemValue","ident":"alsactl_elem_value_set_enum","summary":"Copy the array for values of enumeration index into ..."},{"type":"method","name":"set_enum_data","type_name":"ElemInfo","ident":"alsactl_elem_info_set_enum_data","summary":"Copy the array with elements for the label entries ..."},{"type":"method","name":"set_iec60958_channel_status","type_name":"ElemValue","ident":"alsactl_elem_value_set_iec60958_channel_status","summary":"Copy the given channel status of IEC 60958 into ..."},{"type":"method","name":"set_iec60958_user_data","type_name":"ElemValue","ident":"alsactl_elem_value_set_iec60958_user_data","summary":"Copy the given user data of IEC 60958 into ..."},{"type":"method","name":"set_int","type_name":"ElemValue","ident":"alsactl_elem_value_set_int","summary":"Copy the array for values of integer type into ..."},{"type":"method","name":"set_int64","type_name":"ElemValue","ident":"alsactl_elem_value_set_int64","summary":"Copy the array for values of integer64 type into ..."},{"type":"method","name":"set_int64_data","type_name":"ElemInfo","ident":"alsactl_elem_info_set_int64_data","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"set_int_data","type_name":"ElemInfo","ident":"alsactl_elem_info_set_int_data","summary":"Get the array with elements for the data of ..."},{"type":"method","name":"write_elem_tlv","type_name":"Card","ident":"alsactl_card_write_elem_tlv","summary":"Write the given array of bytes as Type/Length/Value data ..."},{"type":"method","name":"write_elem_value","type_name":"Card","ident":"alsactl_card_write_elem_value","summary":"Write given value to element indicated by the given ..."},{"type":"property","name":"access","type_name":"ElemInfo","summary":"No description available."},{"type":"property","name":"card-id","type_name":"CardInfo","summary":"No description available."},{"type":"property","name":"components","type_name":"CardInfo","summary":"No description available."},{"type":"property","name":"devnode","type_name":"Card","summary":"No description available."},{"type":"property","name":"driver","type_name":"CardInfo","summary":"No description available."},{"type":"property","name":"elem-id","type_name":"ElemInfo","summary":"No description available."},{"type":"property","name":"elem-id","type_name":"ElemValue","summary":"No description available."},{"type":"property","name":"id","type_name":"CardInfo","summary":"No description available."},{"type":"property","name":"long-name","type_name":"CardInfo","summary":"No description available."},{"type":"property","name":"mixer-name","type_name":"CardInfo","summary":"No description available."},{"type":"property","name":"name","type_name":"CardInfo","summary":"No description available."},{"type":"property","name":"owner","type_name":"ElemInfo","summary":"No description available."},{"type":"property","name":"subscribed","type_name":"Card","summary":"No description available."},{"type":"property","name":"type","type_name":"ElemInfo","summary":"No description available."},{"type":"property","name":"value-count","type_name":"ElemInfo","summary":"No description available."},{"type":"record","name":"ElemId","ctype":"ALSACtlElemId","summary":"A boxed object to represent the identifier of element. ..."},{"type":"signal","name":"handle-disconnection","type_name":"Card","summary":"Emitted when the sound card is not available anymore ..."},{"type":"signal","name":"handle-elem-event","type_name":"Card","summary":"Emitted when event occurs for any element."},{"type":"type_func","name":"quark","type_name":"CardError","ident":"alsactl_card_error_quark","summary":"Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in [enum@CardError] enumerations."},{"type":"vfunc","name":"handle_disconnection","type_name":"Card","summary":"Class closure for the [signal@Card::handle-disconnection] signal."},{"type":"vfunc","name":"handle_elem_event","type_name":"Card","summary":"Class closure for the [signal@Card::handle-elem-event] signal."}],"terms":{"":[4,5,7,8,9,11,12,13,14,15,16,17,18,25,33,46,69,70,71,72,73,74,85],"16":[10],"60958":[52,53,59,60,67],"64":[67],"8":[10],"BOXED":[73],"FLAGS":[73],"VOID":[73],"[class@card]":[3],"[class@eleminfo]":[34],"[class@elemvalue]":[47],"[method@card.read_elem_value]":[46],"[struct@glib.maincontext]":[6],"`alsactl.carderror":[64],"`ioctl2":[4,5,7,8,9,11,13,14,15,16,17,18],"`open2":[12],"`poll2":[6],"`read2":[6],"`struct":[25,33,46,74],"abstract":[85],"access":[0,41,46],"accord":[6],"activ":[0],"add":[1,4,16],"addit":[1],"advanc":[46],"after":[2],"all":[8],"alloc":[3,6,34,47,70,71,72,75,76],"alreadi":[64],"alsa":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,85],"alsactl_card_add_elems":[4],"alsactl_card_command_elem_tlv":[5],"alsactl_card_create_source":[6],"alsactl_card_error_quark":[65],"alsactl_card_get_elem_id_list":[7],"alsactl_card_get_elem_info":[8],"alsactl_card_get_info":[9],"alsactl_card_get_protocol_version":[10],"alsactl_card_lock_elem":[11],"alsactl_card_new":[3],"alsactl_card_open":[12],"alsactl_card_read_elem_tlv":[13],"alsactl_card_read_elem_value":[14],"alsactl_card_remove_elems":[15],"alsactl_card_replace_elems":[16],"alsactl_card_write_elem_tlv":[17],"alsactl_card_write_elem_value":[18],"alsactl_elem_id_equal":[77],"alsactl_elem_id_get_device_id":[78],"alsactl_elem_id_get_iface":[79],"alsactl_elem_id_get_index":[80],"alsactl_elem_id_get_name":[81],"alsactl_elem_id_get_numid":[82],"alsactl_elem_id_get_subdevice_id":[83],"alsactl_elem_id_new_by_name":[75],"alsactl_elem_id_new_by_numid":[76],"alsactl_elem_info_get_enum_data":[35],"alsactl_elem_info_get_int64_data":[36],"alsactl_elem_info_get_int_data":[37],"alsactl_elem_info_new":[34],"alsactl_elem_info_set_enum_data":[38],"alsactl_elem_info_set_int64_data":[39],"alsactl_elem_info_set_int_data":[40],"alsactl_elem_value_equal":[48],"alsactl_elem_value_get_bool":[49],"alsactl_elem_value_get_bytes":[50],"alsactl_elem_value_get_enum":[51],"alsactl_elem_value_get_iec60958_channel_status":[52],"alsactl_elem_value_get_iec60958_user_data":[53],"alsactl_elem_value_get_int":[54],"alsactl_elem_value_get_int64":[55],"alsactl_elem_value_new":[47],"alsactl_elem_value_set_bool":[56],"alsactl_elem_value_set_bytes":[57],"alsactl_elem_value_set_enum":[58],"alsactl_elem_value_set_iec60958_channel_status":[59],"alsactl_elem_value_set_iec60958_user_data":[60],"alsactl_elem_value_set_int":[61],"alsactl_elem_value_set_int64":[62],"alsactl_get_card_id_list":[69],"alsactl_get_card_sysname":[70],"alsactl_get_control_devnode":[71],"alsactl_get_control_sysname":[72],"alsactl_sigs_marshal_VOID__BOXED_FLAGS":[73],"alsactlcard":[2,85],"alsactlcarderror":[64],"alsactlcardinfo":[25],"alsactlelemaccessflag":[0],"alsactlelemeventmask":[1],"alsactlelemid":[74],"alsactlelemifacetype":[66],"alsactleleminfo":[33],"alsactlelemtype":[67],"alsactlelemvalue":[46],"alsactleventtype":[68],"an":[2,3,25,33,47,75,76],"ani":[0,1,22,33,46,68],"anymor":[21],"applic":[0,2,46,85],"arrai":[5,10,13,17,35,36,37,38,39,40,46,49,50,51,54,55,56,57,58,61,62],"associ":[7,64],"avail":[19,20,21,26,27,28,29,30,31,32,41,42,43,44,45,48,63,69,73,77],"belong":[78],"bit":[10,67],"bool":[49,56],"boolean":[49,56,67],"box":[46,74],"byte":[5,13,17,50,57,67],"bytes":[67],"call":[2,4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,25,35,36,37,38,39,40,46,64],"card":[2,7,9,12,21,25,26,64,66,69,70,71,72,85],"chang":[0,1],"channel":[52,59],"charact":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,85],"class":[23,24],"closur":[23,24],"code":[64,65],"combin":[74],"command":[0,4,5,7,8,9,11,13,14,15,16,17,18],"compon":[27],"contain":[46],"content":[1],"control":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,64,71,72,85],"copi":[38,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"correspond":[8],"count":[45],"creat":[6,85],"current":[10],"data":[0,1,5,13,17,35,36,37,38,39,40,49,53,56,60],"descript":[19,20,26,27,28,29,30,31,32,41,42,43,44,45,48,63,73,77],"descriptor":[2,85],"design":[85],"destruct":[2],"devic":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,66,71,72,74,78,85],"devnod":[19,71],"disconnect":[21,23,64],"disconnected":[64],"dispatch":[6,85],"distinguish":[46],"domain":[64],"driver":[0,21,28],"due":[21],"each":[6,10,46],"effect":[66],"elem":[0,1,4,5,7,8,11,13,14,15,16,17,18,22,24,33,42,46,63,66,67,68,74],"elem_exist":[64],"elem_not_found":[64],"elem_not_supported":[64],"elem_owned":[64],"element":[0,1,4,5,8,10,11,13,14,15,16,17,18,22,33,35,36,37,38,39,40,46,64,66,67,68,74,78,79,80,81,82,83,85],"emit":[21,22],"entri":[35,38],"enum":[35,38,51,58],"enumer":[8,35,38,51,58,65,66,67,68],"enumerated":[67],"equal":[48,77],"error":[64],"event":[1,6,22,24,68,85],"execut":[4,5,6,7,8,9,11,12,13,14,15,16,17,18],"exist":[16,64,70,71,72],"fail":[64],"failed":[64],"file":[2,85],"flag":[0,1],"found":[64],"from":[0,6,13,14,49,51,52,53,54,55],"fulfil":[13],"function":[2,4,5,7,8,9,11,12,13,14,15,16,17,18,35,36,37,38,39,40,85],"gather":[69,70,71,72],"gener":[7],"get":[0,7,8,9,10,35,36,37,39,40,49,50,51,52,53,54,55,69,70,71,72,78,79,80,81,82,83],"given":[5,8,13,14,17,18,59,60],"glib'":[85],"gmaincontext/gmainloop":[85],"go":[21],"gobject-deriv":[2,25,33],"gsourc":[85],"ha":[66,67],"handl":[6,21,22,23,24],"hold":[85],"hot":[21],"hwdep":[66],"id":[2,7,8,26,29,42,63,69,74,78,83],"identifi":[4,5,13,14,15,17,18,74,76,78,82,83],"iec":[52,53,59,60,67],"iec60958":[52,53,59,60,67],"ifac":[66,79],"import":[46],"inactive":[0],"independ":[0],"index":[51,58,74,80],"indic":[11,14,18],"info":[1,8,9,25,33],"inform":[0,1,8,9,25,33,35,36,37,38,39,40,69,70,71,72],"instanc":[2,3,25,34,47,64,75,76],"instead":[0],"int":[37,40,54,61],"int64":[36,39,55,62],"integ":[37,40,54,61,67],"integer":[67],"integer64":[36,39,55,62,67],"interfac":[66,74,79],"intern":[35,38,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"it":[0],"it'":[46],"iter":[6],"kernel":[0],"label":[8,35,38,67],"length":[10],"librari":[85],"linux":[25,33,46,74],"list":[4,7,69],"lock":[0,11],"lock/unlock":[11],"long":[30,35,36,37,38,39,40],"maintain":[0,2],"major":[10],"manipul":[2,85],"marshal":[73],"mask":[1],"maximum":[36,37,39,40],"micro":[10],"minimum":[36,37,39,40],"minor":[10],"mixer":[31,66],"mutabl":[0],"name":[30,31,32,74,75,81],"new":[3,34,47,75,76],"node":[69,70,71,72],"none":[67],"notifi":[1],"numer":[2,69,74,76,78,82,83],"numid":[76,82],"object":[2,21,25,33,46,74],"occur":[22],"on":[16],"open":[12],"oper":[0,64,85],"order":[10,36,37,39,40],"other":[11,64],"own":[0,64],"owner":[0,21,43],"paramet":[67],"pcm":[66],"point":[5,13,15,17,74],"possibl":[21],"process":[0,11,64],"protocol":[10],"quark":[65],"quickli":[21],"rawmidi":[66],"read":[0,13,14],"refer":[35,36,37],"relat":[68],"releas":[21],"remov":[1,15],"remove":[1],"replac":[16],"repres":[2,10,25,33,46,74,85],"result":[6],"retriev":[8],"return":[3,4,25,34,47,65,70,71,72,75,76],"same":[46],"sequenc":[66],"sequencer":[66],"set":[0,1,38,39,40,56,57,58,59,60,61,62,64,66,67,68],"sever":[7,8],"share":[46],"should":[21],"sig":[73],"signal":[6,23,24],"snd_ctl_card_info":[25],"snd_ctl_elem_id":[74],"snd_ctl_elem_info":[33],"snd_ctl_elem_valu":[46],"sndrv_ctl_ioctl_card_info":[9],"sndrv_ctl_ioctl_elem_add":[4],"sndrv_ctl_ioctl_elem_info":[8],"sndrv_ctl_ioctl_elem_list":[7],"sndrv_ctl_ioctl_elem_lock":[11],"sndrv_ctl_ioctl_elem_read":[14],"sndrv_ctl_ioctl_elem_remov":[15],"sndrv_ctl_ioctl_elem_replac":[16],"sndrv_ctl_ioctl_elem_unlock":[11],"sndrv_ctl_ioctl_elem_writ":[18],"sndrv_ctl_ioctl_tlv_command":[5],"sndrv_ctl_ioctl_tlv_read":[13],"sndrv_ctl_ioctl_tlv_writ":[17],"sound":[2,7,9,12,21,25,33,46,66,69,70,71,72,74],"sourc":[6],"specif":[0],"state":[0,64],"statu":[52,59],"step":[36,37,39,40],"storag":[35,38,46,50,51,52,53,54,55,57,58,59,60,61,62],"string":[71],"structur":[6],"subdevic":[74,83],"subscrib":[20],"subsystem":[25,33,46,69,70,71,72,74],"success":[35,36,37,38,39,40],"support":[0,64],"sysf":[69,70,71,72],"sysnam":[70,72],"system":[0,4,5,6,7,8,9,11,12,13,14,15,16,17,18,64],"three":[10],"thu":[46],"till":[2],"time":[8],"timer":[66],"tlv":[1,5,13,17],"tlv_callback":[0],"tlv_command":[0],"tlv_read":[0],"tlv_write":[0],"two":[74],"type":[33,35,36,37,38,39,40,44,46,49,50,54,55,56,57,61,62,66,67,68,74],"type-length-valu":[0,1],"type/length/valu":[5,13,17],"uapi":[25,33,46,74],"unbind":[21],"under":[0,69,70,71,72],"unplug":[21],"unudentifi":[67],"us":[0,2,10,46,69,70,71,72],"user":[0,53,60],"user-defin":[4,15,16],"valu":[0,1,14,18,36,37,39,40,45,46,49,50,51,54,55,56,57,58,61,62,67],"value":[1],"version":[10],"volatile":[0],"wai":[74],"when":[21,22,70],"which":[78],"whole":[66],"wrap":[25,33,46,74],"write":[0,17,18],"written":[11],"yet":[0]}}